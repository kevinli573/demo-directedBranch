{"version":3,"sources":["stores/PreferencesStore.js","services/AlgorithmUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/EdgesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/panels/SelectionActionPanel.jsx","components/FloatingCards.jsx","app.jsx","index.js","constants/index.js","ipc/client.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/src/select.js","graph-frontend/index.js","images/argologo.png","notifications/client.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["PreferencesStore","requestLoadUserConfig","userConfig","darkMode","this","workspace","workspacePath","requestSaveUserConfig","isRenderOptionsCardHidden","minimapShowing","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","appState","graph","frame","hideMiniMap","console","log","showMiniMap","observable","IS_IFRAME_WIDGET","jsnx","require","jsgraphs","averageClusteringCoefficient","snapshot","jsnxGraph","Graph","addNodesFrom","rawGraph","nodes","map","n","id","addEdgesFrom","edges","e","source_id","target_id","convertToJsnx","result","averageClustering","connectedComponents","ConnectedComponents","i","idDict","length","g","forEach","addEdge","convertToJSGraph","componentCount","exactGraphDiameter","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","f","hasPathTo","pathLength","pathTo","Math","max","GraphStore","ref","initialGlobalConfig","colorBy","color","scale","from","to","sizeBy","size","min","labelBy","shape","labelSize","labelLength","_lastSelectedSingleNode","nodesShowingLabels","hasGraphLoaded","selectedNodeId","setOfNeighborIds","Set","source","toString","target","add","filter","node","has","nodeids","runInAction","includes","isHidden","removeNodesByIds","overrides","positions","getPositions","metadata","global","optionalConfig","getSnapshot","noPosition","undefined","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","parse","savedOverrides","Map","Object","entries","k","v","clear","merge","initialNodesShowingLabels","graphFrame","Frame","computedGraph","init","display","ee","on","selectedNodes","data","menu","MenuFactory","children","MenuItemFactory","onClick","toggleSelectedLabels","text","key","unpinSelectedNodes","pinSelectedNodes","rightClickedNode","rightClickedNodeId","neighbors","getNeighborNodesFromRawGraph","sort","n1","n2","ids","push","showNodes","ContextMenu","show","left","pageX","top","pageY","uniq","nodeProperties","nodeComputed","ret","p","Number","MAX_VALUE","MIN_VALUE","scales","domain","minMax","range","createGraph","override","get","addNode","label","nodeSizeScale","nodeColorScale","hasNode","addLink","nodeCount","graphDensity","sum","degree","averageDegree","computed","fullNodes","fullEdges","edgeProperties","snapshotName","action","ImportStore","postImportFilteringOptions","sortedList","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","nodeFile","path","topN","hasColumns","ready","columns","mapping","delimiter","edgeFile","fromId","toId","createMissing","ProjectStore","SearchStore","AppState","preferences","import","search","project","window","loadAndDisplaySnapshotFromStrapi","uuid","url","BACKEND_URL","fetch","method","mode","then","response","json","body","catch","error","toaster","message","intent","Intent","DANGER","timeout","loadSnapshotFromStrapi","snapshotString","loadImmediateStates","loadAndDisplaySnapshotFromURL","loadSnapshotFromURL","split","pop","loadInitialSampleGraph","a","SAMPLE_GRAPH_SNAPSHOTS","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","paused","updatePositions","showLabels","searchStr","runSearch","panelOpen","candidates","splice","highlightNodeIds","file","selectedEdgeFileFromInput","hasHeader","importConfig","reader","FileReader","readAsText","onload","lines","topLinesAsString","l","trim","join","it","comment","auto_parse","skip_empty_lines","keys","onerror","selectedNodeFileFromInput","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","dialogOpen","onClose","title","checked","onChange","saveUserConfig","toggleDark","PRIMARY","React","Component","name","onToggle","LARGE","FILL","MINIMAL","rightIconName","handleClick","item","isActive","ACTIVE","items","onSelect","value","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","ONLY_EDGE_FILE","setState","available","canImport","state","NODE_AND_EDGE_FILE","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","INPUT_GROUP","type","DISABLED","files","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","loading","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","requestCreateNewProject","newProjectName","createdDate","Date","toLocaleString","requestImportGraphFromCSV","turnOffLabelCSSRenderer","GEXFImportDialog","selectedGexfFileFromInput","requestImportGraphFromGexf","gexfDialogOpen","renderImportButton","OpenDialog","GRAPH_AND_STATE_FILE","stateFile","graphFile","renderSelectGraph","INPUT","placeholder","readOnly","requestChooseGraphFile","renderSelectState","requestChooseStateFile","ONLY_GRAPH_FILE","selectedGraph","selectedState","openDialogOpen","requestOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","requestDelete","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","selectedContinue","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","style","width","marginRight","marginBottom","marginTop","overflow","resize","readonly","position","dangerouslySetInnerHTML","__html","StatisticsDialog","statisticsDialogOpen","TABLE","density","diameter","components","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","isNaN","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","neighborDialogOpen","minWidth","numberToShow","attributeName","hiddenNodes","showNMoreByAttribute","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","Dialogs","RenameSnapshotDialog","RegularNavbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","href","LOGO_URL","src","argologo","height","NAVBAR_HEADING","content","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","Position","BOTTOM","pauseLayout","forceUpdate","sortedNodeList","NAVBAR_DIVIDER","resumeLayout","ALIGN_RIGHT","turnOnMinimalMode","GITHUB_URL","fontSize","textDecoration","icon","faGithub","MinimalNavbar","backgroundColor","role","turnOffMinimalMode","location","Navbar","WorkspaceView","textAlign","ThreeJSVis","setUpFrame","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","float","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","EdgesPanel","thicknessOptionOpen","directedOrNot","LabelsPanel","hideAllLabels","showAllLabels","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","padding","whiteSpace","nodeAttributeValue","num","parseFloat","toPrecision","formatLongFloat","visibility","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","r","cx","cy","StatusBar","numHiddenNodes","SelectionActionPanel","numHiddenNeighbor","WARNING","getSelectedIds","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","marginLeft","sideButtonInv","toggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","searchOrder","INTERACTIVE","userSelect","onMouseOver","node_id","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","currentlyHovered","registerIPC","FocusStyleManager","onlyShowFocusOnTabs","fetchWorkspaceProjects","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","innerWidth","MOBILE_WIDTH_CUTOFF","innerHeight","MOBILE_HEIGHT_CUTOFF","setTimeout","App","keydown","which","ReactDOM","render","parent","FRONTEND_URL","SCALE_LINEAR","SCALE_LOG","LOAD_USER_CONFIG","LOADED_USER_CONFIG","SAVE_USER_CONFIG","SAVED_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATE_NEW_PROJECT","CREATED_NEW_PROJECT","DELETE_FILE","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOOSE_GRAPH_FILE","CHOSEN_GRAPH_FILE","CHOOSE_STATE_FILE","CHOSEN_STATE_FILE","IMPORT_GRAPH","IMPORTED_GRAPH","OPEN_GRAPH","OPENED_GRAPH","SEARCH_REQUEST","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","ADD_NODE","GET_NEIGHBORS","ipcRenderer","send","eventString","filePath","hasNodeFile","toJS","importGraphFromCSV","postImportFilter","importGraphFromGexf","readCSV","fileObject","Promise","resolve","reject","parseGEXF","parser","DOMParser","xmlDoc","parseFromString","xmlEdges","getElementsByTagName","xmlNodes","xmlAttri","nodeAttri","edgesArr","nodesArr","nodeAttriOrdered","curr","getAttribute","currEdge","s","t","currNode","nodeAttvalues","nodeAttvalue","pagerank","j","attributes","attributeIdElementAttribute","attributeId","currAttri","readGEXF","config","parseInt","degreeDict","edgesSet","edgeKey","rank","pageRank","gexfParsed","floor","projectMetadata","$","Node","index","in","out","renderData","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","THREE","memcpy","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","vertices","z","Float32Array","Array","process","compareV3","aa","ab","copyV3","w","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","create","constructor","copy","def","default","OrbitControls","d3","module","self","selectNode","dragging","selection","isSelected","updateSelection","mouseX","mouseY","clearSelection","NODE_NO_HIGHLIGHT","draw_object","visible","textHolder","element","hideme","diffx","diffy","clickedNode","pinnedx","pinnedy","fx","fy","hcolor","checkSelection","mouseEnd","Vector3","mouseStart","right","forEachNode","npos","options","layout","force","getNodePosition","insideBox","posx","posy","balancedBinTree","Argo","Toaster","TOP","STATS","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","spawn","inGraph","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","fov","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","appendChild","dom","begin","controls","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","Visible","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","linecolor","exec","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","zIndex","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","directedArrows","arrowMaterial","MeshBasicMaterial","arrow","Mesh","arrowPositions","arrowColors","drawCount","selectBox","Line","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","coords","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","drawNode","links","removeNode","removeGraphEdges","undrawEdges","undrawNode","nodeLinks","getLinks","removeLink","hidden","killed","drawEdge","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","isHighlighted","red","blue","green","setRGB","op","ctrl","leftMouseDown","onHover","lastHover","startTime","endTime","oldStartTime","now","clickDifference","doubleClicked","newNodeIds","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","transparent","highlight","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMiniMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","setDrawRange","total","arrowPosition","midPointX","midPointY","dX","dY","radianDegree","atan","tempXCorner","cos","tempYCorner","sin","degreeDifference","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","newNode","childNodes","innerText"],"mappings":"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","file":"static/js/main.b42e40e8.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\nimport { IS_IFRAME_WIDGET } from \"../constants\";\n\nexport default class PreferencesStore {\n  @observable dialogOpen = false;\n\n  @observable openDialogOpen = false;\n  @observable openSnapshotDialogOpen = false;\n  @observable shareDialogOpen = false;\n  @observable statisticsDialogOpen = false;\n  @observable helpDialogOpen = false;\n  @observable neighborDialogOpen = false;\n  @observable dataSheetDialogOpen = false;\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\n\n  // The following fields are asynchronously loaded.\n  // Any writes to these fields through saveUserConfig\n  // won't be active until the app exits and starts\n  // next time.\n\n  @observable darkMode = true;\n  @observable minimapShowing = !IS_IFRAME_WIDGET;\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\n\n  @observable workspacePath = '';\n\n  // This is called at the beginning of the app.\n  loadUserConfig() {\n    requestLoadUserConfig();\n  }\n\n  saveUserConfig() {\n    const userConfig = {\n      darkMode: this.darkMode,\n      workspace: this.workspacePath,\n    }\n\n    requestSaveUserConfig(userConfig);\n  }\n\n  turnOnMinimalMode() {\n    this.isRenderOptionsCardHidden = true;\n    this.minimapShowing = false;\n    this.isStatusBarShowing = false;\n    this.isNavbarInMinimalMode = true;\n    this.isLegendShowing = false;\n    if (appState.graph.frame) {\n      appState.graph.frame.hideMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n    \n  }\n\n  turnOffMinimalMode() {\n    this.isRenderOptionsCardHidden = false;\n    this.minimapShowing = true;\n    this.isStatusBarShowing = true;\n    this.isNavbarInMinimalMode = false;\n    this.isLegendShowing = true;\n    if (appState.graph.frame) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n  }\n}","const jsnx = require('jsnetworkx');\nconst jsgraphs = require('js-graph-algorithms');\n\n/**\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJsnx(snapshot) {\n    const jsnxGraph = new jsnx.Graph();\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\n    return jsnxGraph;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the ngraph library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToNGraph(snapshot) {\n    return null;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraph(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraphWeightedDi(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot to the GEXF format.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToGexf(snapshot) {\n    return null;\n}\n\n/**\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function averageClusteringCoefficient(snapshot) {\n    const jsnxGraph = convertToJsnx(snapshot);\n    const result = jsnx.averageClustering(jsnxGraph);\n    console.log('Computing Clustering Coefficient');\n    return result;\n}\n\n/**\n * Calculate the number of connected components in a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function connectedComponents(snapshot) {\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\n    return cc.componentCount();\n}\n\n/**\n * Calculate the density of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function graphDensity(snapshot) {\n    const nodeCount = snapshot.rawGraph.nodes.length;\n    const edgeCount = snapshot.rawGraph.edges.length / 2;\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\n}\n\n/**\n * Calculate the average degree of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function averageDegree(snapshot) {\n    let sum = 0;\n    snapshot.rawGraph.nodes.forEach(e => {\n            sum += e.degree;\n        }\n    )\n    return sum / snapshot.rawGraph.nodes.length;\n}\n\n/**\n * Calculate the diameter of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function exactGraphDiameter(snapshot) {\n    let temp = convertToJSGraphWeightedDi(snapshot);\n    let jsg = temp[0];\n    let idDict = temp[1]\n    let dia = -1;\n    snapshot.rawGraph.nodes.forEach(e => {\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\n        snapshot.rawGraph.nodes.forEach(f => {\n            if(dijkstra.hasPathTo(idDict[f.id])){\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\n                dia = Math.max(dia, pathLength);\n            }\n        })\n    });\n    return dia;\n}\n ","import { observable, computed, action, runInAction } from \"mobx\";\nimport createGraph from \"ngraph.graph\";\nimport { scales } from \"../constants/index\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient, connectedComponents, graphDensity, averageDegree, exactGraphDiameter} from \"../services/AlgorithmUtils\";\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\nimport { Frame } from \"../graph-frontend\";\n\nexport default class GraphStore {\n\n  initialGlobalConfig = {\n    nodes: {\n      colorBy: \"pagerank\",\n      color: {\n        scale: \"Linear Scale\",\n        from: \"#448AFF\",\n        to: \"#E91E63\"\n      },\n      sizeBy: \"pagerank\",\n      size: {\n        min: 2,\n        max: 10,\n        scale: \"Linear Scale\"\n      },\n      labelBy: \"node_id\",\n      shape: \"circle\",\n      labelSize: 1,\n      labelLength: 10\n    },\n    edges: {\n      color: \"#7f7f7f\"\n    }\n  }\n\n  @observable nodes = this.initialGlobalConfig.nodes;\n  @observable edges = this.initialGlobalConfig.edges\n\n  @observable enableDegree = true;\n  @observable enableDensity = true;\n  @observable enableDiameter = false;\n  @observable enableCoefficient = true;\n  @observable enableComponent = true;\n\n  // Updated by frame event\n  @observable selectedNodes = [];\n\n  // Currently hovered node\n  @observable currentlyHovered = undefined;\n\n  // Directed or not\n  @observable directedOrNot = false;\n\n  // Cache the single node that's been selected last time\n  // and will not update unless exactly one node is selected again\n  // useful for NeighborDialog\n  _lastSelectedSingleNode = null;\n  @computed \n  get lastSelectedSingleNode() {\n    if (this.selectedNodes.length === 1) {\n      this._lastSelectedSingleNode = this.selectedNodes[0];\n    }\n    return this._lastSelectedSingleNode;\n  }\n  // Updated by frame event. Not being listened, only used to save label visibility.\n  nodesShowingLabels = [];\n  // Used by autorun during snapshot loading.\n  @observable initialNodesShowingLabels = [];\n\n  @observable\n  overrideConfig = {\n    color: \"#000\",\n    size: 5,\n    label: \"\",\n    shape: \"circle\"\n  };\n\n  @observable\n  rawGraph = {\n    nodes: [],\n    edges: []\n  };\n\n  @observable\n  metadata = {\n    fullNodes: 0,\n    fullEdges: 0,\n    nodeProperties: [],\n    nodeComputed: [\"pagerank\", \"degree\"],\n    edgeProperties: [],\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\n  };\n\n  // used for listing all the properties, either original or computed\n  @computed\n  get allPropertiesKeyList() {\n    return uniq([\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]).filter(k => k !== 'id'); // since node_id is already present\n  }\n\n  @observable.ref frame = null;\n  @observable.ref positions = null;\n\n  @observable overrides = new Map();\n  @observable searchOrder = \"degree\";\n\n  hasGraphLoaded = false;\n\n  @computed\n  get hasGraph() {\n    if (this.rawGraph.nodes.length > 0) {\n      this.hasGraphLoaded = true;\n    }\n    return this.hasGraphLoaded;\n  }\n\n  @computed\n  get minMax() {\n    const ret = {};\n    for (const p of [\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]) {\n      let min = Number.MAX_VALUE;\n      let max = Number.MIN_VALUE;\n\n      for (const n of this.rawGraph.nodes) {\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\n        max = Math.max(max, n[p]);\n      }\n\n      ret[p] = [min, max];\n    }\n    return ret;\n  }\n\n  @computed\n  get nodeSizeScale() {\n    return scales[this.nodes.size.scale]()\n      .domain(this.minMax[this.nodes.sizeBy])\n      .range([this.nodes.size.min, this.nodes.size.max]);\n  }\n\n  @computed\n  get nodeColorScale() {\n    return scales[this.nodes.color.scale]()\n      .domain(this.minMax[this.nodes.colorBy])\n      .range([this.nodes.color.from, this.nodes.color.to]);\n  }\n\n  // Return raw graph nodes that is neighbor with the selected node,\n  // excluding the node itself.\n  getNeighborNodesFromRawGraph(selectedNodeId) {\n    const setOfNeighborIds = new Set();\n    this.rawGraph.edges.forEach(e => {\n        const source = e.source_id.toString();\n        const target = e.target_id.toString();\n        if (source === selectedNodeId && target !== selectedNodeId) {\n            setOfNeighborIds.add(target);\n        }\n        if (target === selectedNodeId && source !== selectedNodeId) {\n            setOfNeighborIds.add(source);\n        }\n    });\n    return this.rawGraph.nodes.filter(node => setOfNeighborIds.has(node.id.toString()));\n  }\n\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\n  @computed\n  get computedGraph() {\n    const graph = createGraph();\n    this.rawGraph.nodes.forEach(n => {\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\n      if (n.isHidden) {\n        return;\n      }\n      const override = this.overrides.get(n.id.toString());\n      graph.addNode(n.id.toString(), {\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\n        size:\n          (override && override.get(\"size\")) ||\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\n        color:\n          (override && override.get(\"color\")) ||\n          this.nodeColorScale(n[this.nodes.colorBy]),\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\n        ref: n\n      });\n    });\n\n    this.rawGraph.edges.forEach(e => {\n      // If isHidden flag is defined and true on an associated node,\n      // leave out its related edges.\n      if (graph.hasNode(e.source_id.toString()) && graph.hasNode(e.target_id.toString())) {\n        graph.addLink(e.source_id.toString(), e.target_id.toString());\n      }\n    });\n\n    return graph;\n  }\n\n  @computed\n  get numHiddenNodes() {\n    return this.rawGraph.nodes.filter(n => n.isHidden).length;\n  }\n\n  showNodes(nodeids) {\n    runInAction('show hidden nodes by ids', () => {\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    });\n  }\n\n  hideNodes(nodeids) {\n    runInAction('hide nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return {...n, isHidden: true};\n        }\n        return n;\n      });\n    });\n  }\n\n  removeNodes(nodeids) {\n    runInAction('remove nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\n        n => !nodeids.includes(n.id)\n      );\n      this.rawGraph.edges = this.rawGraph.edges.filter(\n        e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\n      );\n    });\n  }\n\n  getSnapshot() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n      overrides: this.overrides,\n      nodesShowingLabels: this.nodesShowingLabels,\n      positions: this.frame.getPositions(),\n      metadata: this.metadata,\n      global: {\n        nodes: this.nodes,\n      },\n    };\n    return snapshot;\n  }\n\n  /**\n   * [Argo-lite] Saves graph snapshot as String\n   * \n   * Note that Argo-lite snapshot contains all graph data\n   * and metadata except nodes/edges deleted by users.\n   * This is different from Argo-electron snapshot.\n   */\n  saveImmediateStates(optionalConfig) {\n    const snapshot = this.getSnapshot();\n    // TODO: add corresponding options on frontend\n    // The optional options allows users to leave out\n    // certain app state when saving snapshot\n    if (optionalConfig) {\n      if (optionalConfig.noPosition) {\n        snapshot.positions = undefined;\n      }\n      if (optionalConfig.noGlobal) {\n        snapshot.global = undefined;\n      }\n      if (optionalConfig.noOverride) {\n        snapshot.overrides = undefined;\n      }\n    }\n    return JSON.stringify(snapshot);\n  }\n\n  @action\n  loadImmediateStates(savedStatesStr) {\n    const savedStates = JSON.parse(savedStatesStr);\n    if (!savedStates) {\n      return;\n    }\n    const savedOverrides = new Map(\n      Object.entries(savedStates.overrides).map(([k, v]) => [\n        k,\n        new Map(Object.entries(v))\n      ])\n    );\n    this.overrides.clear();\n    this.overrides.merge(savedOverrides);\n\n    if (savedStates.metadata) {\n      this.metadata = savedStates.metadata;\n    }\n    if (savedStates.global) {\n      this.nodes = savedStates.global.nodes;\n    }\n\n    // The following lines trigger autoruns.\n    this.rawGraph = savedStates.rawGraph;\n    if (savedStates.positions) {\n      this.positions = savedStates.positions;\n    }\n    if (savedStates.nodesShowingLabels) {\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\n    }\n  }\n\n  setUpFrame() {\n    const graphFrame = new Frame(this.computedGraph);\n    graphFrame.init();\n    graphFrame.display();\n    this.frame = graphFrame;\n    graphFrame.ee.on(\"select-nodes\", nodes => {\n      this.selectedNodes = nodes;\n    });\n    graphFrame.ee.on(\"show-node-label\", nodes => {\n      this.nodesShowingLabels = nodes;\n    });\n    graphFrame.ee.on(\"right-click\", data => {\n      const menu = MenuFactory({\n        children: [\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.toggleSelectedLabels();\n            },\n            text: 'Toggle Labels',\n            key: 'Toggle Labels'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.unpinSelectedNodes();\n            },\n            text: 'Unpin Selected',\n            key: 'Unpin Selected'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.pinSelectedNodes();\n            },\n            text: 'Pin Selected',\n            key: 'Pin Selected'\n          }),\n          this.frame.rightClickedNode && MenuItemFactory({\n            onClick: () => {\n              if (this.frame.rightClickedNode) {\n                const rightClickedNodeId = this.frame.rightClickedNode.data.ref.id.toString();\n                const neighbors = this.getNeighborNodesFromRawGraph(rightClickedNodeId);\n                neighbors.sort((n1, n2) => {\n                  if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                      return n2[\"pagerank\"] - n1[\"pagerank\"];\n                  }\n                  return 0;\n                });\n                const ids = [];\n                for (let i = 0; i < 5 && i < neighbors.length; i++) {\n                  ids.push(neighbors[i].id);\n                }\n                this.showNodes(ids);\n              }\n            },\n            text: 'Show 5 Neighbors with Highest PageRank',\n            key: 'Show 5 Neighbors with Highest PageRank'\n          }),\n        ]\n      });\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\n        // onMenuClose\n        console.log(\"ContextMenu closed\");\n      });\n    });\n  }\n\n /*\n  * Graph algorithms used in StatisticsDialog.\n  */\n \n  get averageClustering() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageClusteringCoefficient(snapshot);\n  }\n\n \n  get components() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return connectedComponents(snapshot);\n  }\n\n  @computed\n  get density() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return graphDensity(snapshot);\n  }\n\n  @computed\n  get degree() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageDegree(snapshot);\n  }\n\n  @computed\n  get diameter() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return exactGraphDiameter(snapshot);\n  }\n}\n\n","import { observable } from \"mobx\";\n\nexport default class ImportStore {\n  @observable graphFile = \"\";\n  @observable stateFile = \"\";\n\n  @observable dialogOpen = false;\n  @observable gexfDialogOpen = false;\n\n  @observable loading = false;\n\n  // Argo-lite specific: File object selected via the file input.\n  @observable selectedEdgeFileFromInput = null;\n  @observable selectedNodeFileFromInput = null;\n\n  @observable selectedGexfFileFromInput = null;\n\n  @observable\n  importConfig = {\n    nodeFile: {\n      path: \"\",\n      topN: [],\n      hasColumns: true,\n      ready: false, // whether the topN is ready to display\n      columns: [],\n      mapping: {\n        id: \"<UNK>\"\n      },\n      delimiter: \",\"\n    },\n    edgeFile: {\n      path: \"\",\n      ready: false,\n      hasColumns: true,\n      columns: [],\n      topN: [],\n      mapping: {\n        fromId: \"<UNK>\",\n        toId: \"<UNK>\"\n      },\n      createMissing: true,\n      delimiter: \",\"\n    }\n  };\n\n  /*\n    Post Import Filtering related options.\n  */\n\n  postImportFilteringOptions = {\n    \"top 10 nodes with highest PageRank scores\": (rawGraph) => {\n      const sortedList = [...rawGraph.nodes];\n      sortedList.sort((n1, n2) => {\n          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n              return n2[\"pagerank\"] - n1[\"pagerank\"];\n          }\n          return 0;\n      });\n      const setIds = new Set();\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\n        setIds.add(sortedList[i].id);\n      }\n      rawGraph.nodes = rawGraph.nodes.map(n => {\n        if (setIds.has(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    },\n    \"All Nodes\": (rawGraph) => {\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\n    },\n  };\n\n  defaultPostImportFilteringOption = \"top 10 nodes with highest PageRank scores\";\n  \n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\n\n  postImportFilter(rawGraph) {\n    // Hide all nodes by default, use filtering option to show them.\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\n    // Run the selected post import filtering option.\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\n  }\n\n\n}\n","import { observable } from \"mobx\";\n\nexport default class ProjectStore {\n \n  @observable projects = [];\n\n  /*\n   * Active project and snapshot\n   */\n  @observable currentProject = null;\n  // @observable currentProjectName = null;\n  // @observable currentProjectPath = null;\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\n\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\n  @observable stringCopyOfSnapshot = 'Loading';\n  \n  /*\n   * Dialogs and UI\n   */\n  @observable isNewProjectDialogOpen = false;\n  @observable isProjectDetailDialogOpen = false;\n  @observable isSaveSnapshotDialogOpen = false;\n  @observable isRenameSnapshotDialogOpen = false;\n  // when the ipc returns the projects data for the first time\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\n  // Also used when refreshing WorkspaceView\n  @observable isFetching = true;\n\n  /*\n   * New project creation and import\n   */\n  @observable newProjectName = '';\n}\n","import { observable } from \"mobx\";\n\nexport default class SearchStore {\n  @observable searchStr = \"\";\n  @observable candidates = [];\n  @observable numCandidates = 0;\n  @observable panelOpen = false;\n}\n","import { autorun, runInAction } from \"mobx\";\nimport { Intent } from \"@blueprintjs/core\";\n\nimport PreferencesStore from \"./PreferencesStore\";\nimport GraphStore from \"./GraphStore\";\nimport ImportStore from \"./ImportStore\";\nimport ProjectStore from \"./ProjectStore\";\n// import { peakCSV } from \"../services/CSVUtils\";\nimport parse from \"csv-parse/lib/sync\";\nimport SearchStore from \"./SearchStore\";\nimport { runSearch } from \"../ipc/client\";\n\nimport { BACKEND_URL, SAMPLE_GRAPH_SNAPSHOTS } from \"../constants\";\nimport { toaster } from '../notifications/client';\n\nexport class AppState {\n  constructor() {\n    this.preferences = new PreferencesStore();\n    this.graph = new GraphStore();\n    this.import = new ImportStore();\n    this.search = new SearchStore();\n    this.project = new ProjectStore();\n  }\n}\n\nconst appState = new AppState();\n\nwindow.appState = appState;\n\nconst loadSnapshotFromURL = (url) => {\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.text()).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadSnapshotFromStrapi = (uuid) => {\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadAndDisplaySnapshotFromURL = (url) => {\n  loadSnapshotFromURL(url).then(snapshotString => {\n    // use filename/last segment of URL as title in Navbar\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\n    // TODO: use more sensible snapshot name\n    appState.graph.metadata.snapshotName = 'Shared';\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\n\nwindow.loadInitialSampleGraph = async () => {\n  // default fallback url\n  // let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\n\n  // check url hash\n  // if (window.location.hash) {\n  //   const hash = window.location.hash.substring(1);\n  //   // If the hash component begins with http.\n  //   if (hash.length >= 4 && hash.startsWith('http')) {\n  //     try {\n  //       url = decodeURIComponent(hash);\n  //     } catch (e) {\n  //       console.error(e);\n  //       alert('Provided URL is not valid.');\n  //     }\n  //   } else {\n  //     // If the hash component does not begin with http\n  //     // treat it as a uuid in strapi.\n  //     loadAndDisplaySnapshotFromStrapi(hash);\n  //     return;\n  //   }\n    \n  // }\n  // loadAndDisplaySnapshotFromURL(url)\n  loadAndDisplaySnapshotFromStrapi(SAMPLE_GRAPH_SNAPSHOTS[0][1]);\n};\n\nwindow.saveSnapshotToString = () => {\n  const snapshotString = appState.graph.saveImmediateStates();\n  return snapshotString;\n};\n\n// Load initial sample graph when Argo Lite is ready\nwindow.addEventListener('load', (event) => {\n  window.loadInitialSampleGraph();\n});\n\nconst updateTimeout = null;\n\n// Load graph on frontend once the rawGraph has been returned from IPC\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\nautorun(() => {\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\n    appState.graph.hasGraph = true;\n  }\n})\n\nautorun(() => {\n  if (appState.graph.frame) {\n    appState.graph.frame.updateGraph(appState.graph.computedGraph);\n    appState.graph.frame.setAllNodesShapeWithOverride(appState.graph.nodes.shape, appState.graph.overrides);\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\n  }\n});\n\nautorun(() => {\n  if (appState.graph.frame && appState.graph.positions) {\n    // If positions are saved in a snapshot, pause layout upon loading.\n    appState.graph.frame.paused = true;\n    appState.graph.frame.updatePositions(appState.graph.positions);\n    appState.graph.positions = null;\n    console.log('[autorun] Positions updated.');\n  }\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\n    appState.graph.initialNodesShowingLabels = null;\n  }\n});\n\nautorun(() => {\n  const searchStr = appState.search.searchStr;\n  if (searchStr.length >= 3) {\n    runSearch(searchStr);\n  } else {\n    appState.search.panelOpen = false;\n    appState.search.candidates.splice(0, appState.search.candidates.length);\n    if (appState.graph.frame) {\n      appState.graph.frame.highlightNodeIds([], true);\n    }\n  }\n});\n\n// Argo-lite specific: extract CSV from File object and update related fields.\nautorun(() => {\n  const file = appState.import.selectedEdgeFileFromInput;\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n      runInAction(\"preview top N lines of edge file\", () => {\n        appState.import.importConfig.edgeFile.topN = it;\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[1];\n        appState.import.importConfig.edgeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to parse file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nautorun(() => {\n  const file = appState.import.selectedNodeFileFromInput;\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n\n      runInAction(\"preview top N lines of node file\", () => {\n        appState.import.importConfig.nodeFile.topN = it;\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.nodeFile.mapping.id = appState.import.importConfig.nodeFile.columns[0];\n        appState.import.importConfig.nodeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to open file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nexport default appState;\n","import React from \"react\";\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { requestChangeWorkspace } from \"../ipc/client\";\n\n@observer\nclass PreferencesDialog extends React.Component {\n  render() {\n    return (\n      <Dialog\n        iconName=\"cog\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.dialogOpen}\n        onClose={() => {\n          appState.preferences.dialogOpen = false;\n        }}\n        title=\"Preferences\"\n      >\n        <div className=\"pt-dialog-body\">\n          <Switch\n            label=\"Dark Mode\"\n            checked={appState.preferences.darkMode}\n            onChange={() => {\n              appState.preferences.darkMode = !appState.preferences.darkMode;\n              appState.preferences.saveUserConfig();\n              if (appState.graph.frame) {\n                appState.graph.frame.toggleDark();\n              }\n            }}\n          />\n          \n          <Switch\n           label=\"Minimap\"\n           checked={appState.preferences.minimapShowing}\n           onChange={() => {\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\n            appState.preferences.saveUserConfig();\n            if (appState.graph.frame) {\n              if (appState.preferences.minimapShowing) {\n                appState.graph.frame.showMiniMap();\n              } else {\n                appState.graph.frame.hideMiniMap();\n              }\n            } else {\n              console.log(\"Frame not ready when trying to toggle minimap.\");\n            }\n           }}\n          />\n        </div>\n        <div className=\"pt-dialog-footer\">\n          <div className=\"pt-dialog-footer-actions\">\n            <Button\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.preferences.dialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default PreferencesDialog;","import React from \"react\";\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Button\n      className={classnames(Classes.LARGE, Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\n      onClick={onToggle}\n    >\n      {name}\n    </Button>\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\n\nexport default ({ handleClick, item, isActive }) => (\n  <MenuItem\n    className={isActive ? Classes.ACTIVE : \"\"}\n    key={item}\n    onClick={handleClick}\n    text={item}\n  />\n);\n","import React from \"react\";\nimport { Button, Classes } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport CommonItemRenderer from \"./CommonItemRenderer\";\n\nexport default ({ items, onSelect, value, fill = false }) => (\n  <Select\n    items={items}\n    itemRenderer={CommonItemRenderer}\n    filterable={false}\n    onItemSelect={onSelect}\n  >\n    <Button className={fill ? Classes.FILL : null} text={value} />\n  </Select>\n);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass PostImportOptions extends React.Component {\n  render() {\n    return (\n      <div>\n            After import, show:\n            <SimpleSelect\n                items={Object.keys(appState.import.postImportFilteringOptions)}\n                value={appState.import.selectedPostImportFilteringOption}\n                onSelect={(selected) => {\n                    appState.import.selectedPostImportFilteringOption = selected;\n                }}\n            />\n      </div>\n    );\n  }\n}\n\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseEdgeFile,\n  requestChooseNodeFile,\n  requestImportGraphFromCSV,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport Collapsable from \"./utils/Collapsable\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass PreviewTable extends React.Component {\n  render() {\n    const file = this.props.file;\n    return (\n      <Table\n        className=\"import-preview-table\"\n        numRows={file.topN.length}\n        selectedRegions={Object.values(file.mapping)\n          .map(it => file.columns.indexOf(it))\n          .map(it => ({ rows: null, cols: [it, it] }))}\n      >\n        {file.columns.map(it => (\n          <Column\n            key={it}\n            name={it}\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\n          />\n        ))}\n      </Table>\n    );\n  }\n}\n\n@observer\nclass ImportDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_EDGE_FILE,\n      nodesOpen: true,\n      edgesOpen: true,\n      delimiter: ','\n    };\n  }\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  canImport = () => {\n    if (this.state.available === NODE_AND_EDGE_FILE) {\n      return (\n        appState.import.importConfig.edgeFile.ready &&\n        appState.import.importConfig.nodeFile.ready\n      );\n    } else if (this.state.available === ONLY_EDGE_FILE) {\n      return appState.import.importConfig.edgeFile.ready;\n    }\n    return false;\n  };\n\n  renderNodesSelection = () => {\n    const nodeFile = appState.import.importConfig.nodeFile;\n    if (this.state.available === ONLY_EDGE_FILE) {\n      return null;\n    }\n    return (\n      <Collapsable\n        name=\"Nodes\"\n        isOpen={this.state.nodesOpen}\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={nodeFile.hasColumns}\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\n        />\n        {nodeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={nodeFile} />\n            Column for Node ID:\n            <SimpleSelect\n              items={nodeFile.columns}\n              value={nodeFile.mapping.id}\n              onSelect={it => (nodeFile.mapping.id = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  renderEdgesSelection = () => {\n    const edgeFile = appState.import.importConfig.edgeFile;\n    return (\n      <Collapsable\n        name=\"Edges\"\n        isOpen={this.state.edgesOpen}\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={edgeFile.hasColumns}\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\n        />\n        <Switch\n          label=\"Create Missing Nodes\"\n          checked={edgeFile.createMissing}\n          disabled={this.state.available === ONLY_EDGE_FILE}\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\n        />\n        {edgeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={edgeFile} />\n            Column for Source ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.fromId}\n              onSelect={it => (edgeFile.mapping.fromId = it)}\n            />{\" \"}\n            <br />\n            Column for Target ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.toId}\n              onSelect={it => (edgeFile.mapping.toId = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  updateDelimiter (newDelimiter) {\n    this.setState({delimiter: newDelimiter});\n\n    if (newDelimiter == \"\\\\t\") {\n      newDelimiter = \"\\t\"\n    }\n\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\n  }\n\n  renderDelimiterSelection() {\n    return (\n      <div className=\"column-selection\">\n        Selected Delimiter\n        <SimpleSelect\n          items={[\",\", \"\\\\t\", \";\"]}\n          value={this.state.delimiter}\n          onSelect={it => { this.updateDelimiter(it) }}\n        />{\" \"}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.dialogOpen}\n        onClose={() => {\n          appState.import.dialogOpen = false;\n        }}\n        title=\"Import CSV\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderNodesSelection()}\n              {this.renderEdgesSelection()}\n              {this.renderDelimiterSelection()}\n              <hr />\n              <PostImportOptions />\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // TODO: this might be unsafe, check if there's racing condition\n                    requestCreateNewProject({\n                      name: appState.project.newProjectName,\n                      createdDate: new Date().toLocaleString(),\n                    });\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\n                    );\n\n                    // Importing a graph means no label would be shown by default,\n                    // thus turn off label CSSRenderer for better performance.\n                    appState.graph.frame.turnOffLabelCSSRenderer();\n                  }}\n                  text=\"Import\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestImportGraphFromGexf\n} from \"../ipc/client\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass GEXFImportDialog extends React.Component {\n\n  renderImportButton() {\n    return (\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            className={classnames({\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\n            })}\n            intent={Intent.PRIMARY}\n            onClick={() => {\n              // Temp\n              appState.import.loading = true;\n              requestImportGraphFromGexf();\n            }}\n            text=\"Import\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.gexfDialogOpen}\n        onClose={() => {\n          appState.import.gexfDialogOpen = false;\n          appState.import.loading = false;\n        }}\n        title=\"Import GEXF\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n            <div>\n              <div className={classnames(Classes.CONTROL_GROUP)}>\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\n                  }}\n                />\n              </div>\n            </div>\n            <hr />\n            <PostImportOptions />\n          </div>\n            {this.renderImportButton()}\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\n\n/**\n * [Deprecated] This dialog is only used to open SQlite-based\n * graph file and optionally along with a snapshot file.\n * \n * For Argo-lite, which only has the JSON snapshot file,\n * use OpenSnapshotDialog.\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseGraphFile,\n  requestChooseStateFile,\n  requestOpen\n} from \"../ipc/client\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport {\n  GRAPH_AND_STATE_FILE,\n  ONLY_EDGE_FILE,\n  ONLY_GRAPH_FILE\n} from \"../constants\";\n\n@observer\nclass OpenDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_GRAPH_FILE,\n      selectedGraph: null,\n      selectedState: null\n    };\n  }\n\n  canImport = () => {\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\n      return appState.import.stateFile && appState.import.graphFile;\n    } else {\n      return appState.import.graphFile;\n    }\n    return false;\n  };\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  renderSelectGraph = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select graph file\"\n            readOnly\n            value={appState.import.graphFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  renderSelectState = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select snapshot file\"\n            readOnly\n            value={appState.import.stateFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openDialogOpen}\n        onClose={() => {\n          appState.preferences.openDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderSelectGraph()}\n              {this.state.available === GRAPH_AND_STATE_FILE &&\n                this.renderSelectState()}\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    appState.preferences.openDialogOpen = false;\n                    requestOpen();\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass NewProjectDialog extends React.Component {\n  \n  render() {\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\n  \n    return (\n      <Dialog\n        iconName=\"projects\"\n        isOpen={appState.project.isNewProjectDialogOpen}\n        onClose={() => {\n          appState.project.isNewProjectDialogOpen = false;\n        }}\n        title=\"Create New Project\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <label className=\"pt-label .modifier\">\n            Project Name\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"New Project\"\n              dir=\"auto\"\n              value={appState.project.newProjectName}\n              onChange={event => {\n                appState.project.newProjectName = event.target.value;\n              }}\n            />\n          </label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !isValidated\n              })}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                if (isValidated) {\n                  appState.project.isNewProjectDialogOpen = false;\n                  appState.import.dialogOpen = true;\n                }\n              }}\n              text=\"Next\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewProjectDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestOpen, requestDelete } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass ProjectDetailDialog extends React.Component {\n  render() {\n    return (\n      appState.project.currentProject && (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isProjectDetailDialogOpen}\n          onClose={() => {\n            appState.project.isProjectDetailDialogOpen = false;\n          }}\n          title={`Load ${appState.project.currentProject.name} Project`}\n        >\n          {appState.project.currentProject.hasGraphData ? (\n            <div className={Classes.DIALOG_BODY}>\n              <Card\n                interactive={true}\n                elevation={Card.ELEVATION_TWO}\n                onClick={() => {\n                  appState.import.graphFile =\n                    appState.project.currentProject.graphDataPath;\n                  appState.project.isProjectDetailDialogOpen = false;\n                  requestOpen();\n                }}\n              >\n                <Icon iconName=\"graph\" /> Start fresh from original graph\n              </Card>\n              <hr />\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\n              <div>\n                {appState.project.currentProject.snapshotPaths.map(\n                  snapshotPath => {\n                    return (\n                      <div key={snapshotPath}>\n                        <Card\n                          interactive={false}\n                          elevation={Card.ELEVATION_TWO}\n                        >\n                          {/* <Icon iconName=\"layout\" /> */}\n                          <h5>\n                            {snapshotPath\n                              .replace(/^.*[\\\\\\/]/, \"\")\n                              .replace(/\\.[^/.]+$/, \"\")}\n                          </h5>\n                          <Button\n                            className={classnames([\n                              Classes.BUTTON,\n                              Classes.INTENT_PRIMARY\n                            ])}\n                            onClick={() => {\n                              appState.import.graphFile =\n                                appState.project.currentProject.graphDataPath;\n                              appState.import.stateFile = snapshotPath;\n                              appState.project.currentSnapshotName = snapshotPath\n                                .replace(/^.*[\\\\\\/]/, \"\")\n                                .replace(/\\.[^/.]+$/, \"\");\n                              appState.project.isProjectDetailDialogOpen = false;\n                              requestOpen();\n                            }}\n                          >\n                            Load Snapshot\n                          </Button>\n                          <Button\n                            className={classnames([Classes.BUTTON])}\n                            onClick={() => {\n                                requestDelete(snapshotPath);\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\n                                  path => path !== snapshotPath\n                                );\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Card>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>\n              Error: Cannot find .argograph file in this project directory.\n            </div>\n          )}\n        </Dialog>\n      )\n    );\n  }\n}\n\nexport default ProjectDetailDialog;","/**\n * [Argo-lite Modified]\n * In electron Argo, snapshots are saved to the active project folder.\n * In Argo-lite, snapshots are saved as a file download.\n * Sometimes, it's tricky to let browser download something without a backend\n * hosting the file. Thus we also allow user to copy paste from\n * a text area containing our snapshot JSON.\n * \n * Remember to change appState.project.stringCopyOfSnapshot\n * before showing the dialog.\n */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestSaveSnapshot } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"Quick Save\",\n  //   };\n  // }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isSaveSnapshotDialogOpen = false;\n          }}\n          title={`Save Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            {/* <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label> */}\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\n            <button\n              onClick={() => {\n                document.getElementById('snapshot-textarea').select();\n                document.execCommand(\"copy\");\n              }}\n            >\n              Copy to Clipboard\n            </button>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                // className={classnames({\n                //   [Classes.DISABLED]: !this.state.name\n                // })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.project.isSaveSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n    Button,\n    Classes,\n    Card,\n    Icon,\n    Dialog,\n    Intent,\n    Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\nimport * as Blueprint from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShared: false,\n            isFetching: false,\n            sharedURL: 'Error: Sharing failed',\n            selectedContinue: false,\n        };\n\n        this.handleRequest = this.handleRequest.bind(this);\n    }\n\n\n\n\n    async handleRequest(uuid) {\n        // return await new Promise(resolve => setTimeout(resolve, 2000));\n        const backendURL = `${BACKEND_URL}/snapshots`;\n        // TODO: add better error handling\n        return await fetch(backendURL, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            referrer: 'no-referrer',\n            body: JSON.stringify({\n                uuid,\n                body: window.saveSnapshotToString()\n            }),\n        }).then(response => response.ok).catch(error => {\n            toaster.show({\n                message: 'Failed to publish to sharing server. Unexpected error.',\n                intent: Intent.DANGER,\n                timeout: -1\n            });\n        });\n    }\n\n    render() {\n\n\n\n        return (\n            <Dialog\n                iconName=\"projects\"\n                isOpen={appState.preferences.shareDialogOpen}\n                onClose={() => {\n                    appState.preferences.shareDialogOpen = false;\n                    this.setState({\n                        ...this.state,\n                        selectedContinue: false,\n                    });\n                }}\n                title={`Share Graph Snapshot`}\n                style={{ width: !this.state.selectedContinue ? 735 : 580 }}\n            >\n                <div className={classnames(Classes.DIALOG_BODY)}>\n                    {\n                        !this.state.selectedContinue && (\n                            <div>\n                                <p style={{ display: \"inline\", marginRight: \"20px\" }}>You can share your snapshot as\n                        <b> a public URL</b>, an <b> HTML iframe</b>, or a <b>Jupyter Notebook IFrame</b></p>\n                                {\n                                    !this.state.selectedContinue && (\n                                        <Button\n                                            className={classnames({\n                                                [Classes.DISABLED]: this.state.isFetching\n                                            })}\n                                            intent={Intent.PRIMARY}\n                                            onClick={async () => {\n                                                this.setState({ isFetching: true });\n                                                // Generate a random UUID\n                                                const uuid = uuidv4();\n                                                // Generate URL corresponding to the UUID\n                                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                                // Wait for backend response\n                                                const requestSuccess = await this.handleRequest(uuid);\n                                                // Update local state\n                                                if (requestSuccess) {\n                                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                                } else {\n                                                    // request fails, toast fires\n                                                    this.setState({ isFetching: false, isShared: false });\n                                                    toaster.show({\n                                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                                        intent: Intent.DANGER,\n                                                        timeout: -1\n                                                    });\n                                                }\n                                                this.setState({\n                                                    ...this.state,\n                                                    selectedContinue: true,\n                                                });\n                                            }}\n                                            text=\"Continue\"\n                                        />\n                                    )\n                                }\n                                <hr />\n                                {/**pt-callout pt-intent-primary .modifier */}\n                                <div className=\"pt-callout pt-intent-warning\" style={{marginBottom: \"20px\",}}>\n                                    <p className=\"pt-callout-title\">This snapshot is “static”, like taking a photo of your visualization. This means that if your graph is changed in any ways (e.g., move nodes around) after creating a URL and you want to re-share those updates, you will need to create a new URL by selecting <b>Share Again to a new URL</b> in the next window.</p>\n                                </div>\n                                <div className=\"pt-callout pt-intent-danger\">\n                                    <p className=\"pt-callout-title \"><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data (>400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                    {\n                        this.state.isFetching && (\n                            <p style={{marginTop: \"10px\"}}><b>Sharing in progress. Please wait...</b></p>\n                        )\n                    }\n                    {\n                        this.state.selectedContinue && (\n                            <div>\n                                {/** graph URL */}\n                        Your current snapshot has been shared to\n                                <br />\n                                <input\n                                    id=\"snapshot-textarea\"\n                                    type=\"textarea\"\n                                    value={this.state.sharedURL}\n                                    readOnly\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('snapshot-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as HTML iframe */}\n                        Embed as an <b>HTML iframe</b>:\n                                <br />\n                                <input\n                                    id=\"iframe-html-textarea\"\n                                    type=\"textarea\"\n                                    value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                    readOnly\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-html-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as Jupyter Notebook IFrame */}\n                        Embed as a <b>Jupyter Notebook IFrame</b>:\n                                <br />\n                                <textarea\n                                    id=\"iframe-jupyter-textarea\"\n                                    rows=\"2\"\n                                    cols=\"60\"\n                                    style={{\n                                        overflow: \"hidden\",\n                                        marginTop: \"5px\",\n                                        width: \"400px\",\n                                        resize: \"none\"\n                                    }}\n                                    readonly=\"true\"\n                                    value={`from IPython.display import IFrame` + \"\\n\" + `IFrame(\"${this.state.sharedURL}\", width=700, height=350)`} />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-jupyter-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                    style={{\n                                        position: \"absolute\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    Copy to Clipboard\n                        </button>\n                            </div>\n                        )\n                    }\n                </div>\n\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                        {\n                            this.state.selectedContinue && (\n\n\n                                <Button\n                                    className={classnames({\n                                        [Classes.DISABLED]: this.state.isFetching\n                                    })}\n                                    intent={Intent.PRIMARY}\n                                    onClick={async () => {\n                                        this.setState({ isFetching: true, isShared: false });\n                                        // Generate a random UUID\n                                        const uuid = uuidv4();\n                                        // Generate URL corresponding to the UUID\n                                        const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                        // Wait for backend response\n                                        const requestSuccess = await this.handleRequest(uuid);\n                                        // Update local state\n                                        if (requestSuccess) {\n                                            this.setState({ isFetching: false, isShared: true, sharedURL });\n                                        } else {\n                                            // request fails, toast fires\n                                            this.setState({ isFetching: false, isShared: false });\n                                            toaster.show({\n                                                message: 'Failed to publish to sharing server. Please try again later.',\n                                                intent: Intent.DANGER,\n                                                timeout: -1\n                                            });\n                                        }\n\n                                    }}\n                                    text=\"Share Snapshot as New URL\"\n                                />\n                            )\n                        }\n\n                    </div>\n                </div>\n\n\n                <style dangerouslySetInnerHTML={{\n                    __html:\n                        `\n                    .copy-to-clipboard{\n                        margin-top: 5px;\n                        margin-left: 5px;\n                        border-style: solid;\n                    }\n                    \n            `}} />\n            </Dialog>\n        );\n    }\n}\n\nexport default ShareDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass StatisticsDialog extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.preferences.statisticsDialogOpen}\n          onClose={() => {\n            appState.preferences.statisticsDialogOpen = false;\n          }}\n          title={`Statistics`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <table className={Classes.TABLE} style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Statistics</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td># Nodes</td>\n                        <td>{appState.graph.metadata.fullNodes}</td>\n                    </tr>\n                    <tr>\n                        <td># Edges</td>\n                        <td>{appState.graph.metadata.fullEdges}</td>\n                    </tr>\n                    <tr>\n                        <td>Average Degree</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Density</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Diameter</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Clustering Coefficient</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\n                    </tr>\n                    <tr>\n                        <td>Connected Component</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\n\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.statisticsDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default StatisticsDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass HelpDialog extends React.Component {\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"help\"\n          isOpen={appState.preferences.helpDialogOpen}\n          onClose={() => {\n            appState.preferences.helpDialogOpen = false;\n          }}\n          title={`Help`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            Argo supports both mouse/trackpad and touchscreen.\n            <div className=\"argo-table-container\">\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                <thead>\n                  <tr>\n                    <th>Basic Operation</th>\n                    <th>Mouse</th>\n                    <th>Touchscreen</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Zoom</td>\n                    <td>Mouse wheel</td>\n                    <td>2 finger zoom gesture</td>\n                  </tr>\n                  <tr>\n                    <td>Pan</td>\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\n                    <td>Drag with 3 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select single node (view details)</td>\n                    <td>Single Click</td>\n                    <td>Tap with 1 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select multiple nodes</td>\n                    <td>Drag left mouse button from empty area</td>\n                    <td>Drag 1 finger from empty area</td>\n                  </tr>\n                  <tr>\n                    <td>Drag nodes</td>\n                    <td>Drag with left mouse button down</td>\n                    <td>Drag with 1 finger</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.helpDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default HelpDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Switch,\n  ButtonGroup\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NodeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: 'pagerank',\n            sortOrder: 'descending', // or 'ascending'\n        };\n    }\n\n  render() {\n    let filteredNodes = this.props.nodes;\n    \n    filteredNodes.sort((n1, n2) => {\n        const n1val = n1[this.state.sortBy];\n        const n2val = n2[this.state.sortBy];\n        if (n1val && n2val) {\n            // Check if these are numerical fields, if so sort by number.\n            const n1valAsNum = Number(n1val);\n            const n2valAsNum = Number(n2val);\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\n                // both values are numeric, compare by their value.\n                if (this.state.sortOrder === 'descending') {\n                    return n2valAsNum - n1valAsNum;\n                }\n                return n1valAsNum - n2valAsNum;\n            } else {\n                // not all values are numeric, sort by string order.\n                const n1valAsString = n1val.toString();\n                const n2valAsString = n2val.toString();\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\n            }\n        }\n        return 0;\n    });\n\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\n    \n    return (\n            <div className=\"argo-table-container\">\n                Sort By {' '}\n                <SimpleSelect\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\n                    value={this.state.sortBy}\n                    onSelect={(selected) => {\n                        this.setState({sortBy: selected});\n                    }}\n                />\n                <SimpleSelect\n                    items={['descending', 'ascending']}\n                    value={this.state.sortOrder}\n                    onSelect={(selected) => {\n                        this.setState({sortOrder: selected});\n                    }}\n                />\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                    <thead>\n                        <tr>\n                            <th><b>Show</b></th>\n                            <th><b>Node ID</b></th>\n                            {\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\n                                    if (it !== 'id') {\n                                        return <th key={`${it}-${i}`}>{it}</th>;\n                                    }\n                                    return null;\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredNodes.map((node) => (\n                                <tr key={node.id}>\n                                    <td>\n                                        <Switch\n                                            checked={!node.isHidden}\n                                            onChange={() => {\n                                                if (node.isHidden) {\n                                                    appState.graph.showNodes([node.id]);\n                                                } else {\n                                                    appState.graph.hideNodes([node.id]);\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                    <td>{node.id}</td>\n                                    {\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\n                                            if (it !== 'id') {\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n    );\n  }\n}\n\nexport default NodeTable;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NeighborDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    // Compare function for nodes used for sorting descendingly.\n    const compareByPageRank = (n1, n2) => {\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\n        }\n        return 0;\n    };\n\n    let filteredNodes = [];\n    // When only one node is selected, show the neighbors of this selected node.\n    if (appState.graph.lastSelectedSingleNode) {\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\n\n        // Sort by pagerank if available.\n        filteredNodes.sort(compareByPageRank);\n    }\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"graph\"\n          isOpen={appState.preferences.neighborDialogOpen}\n          onClose={() => {\n            appState.preferences.neighborDialogOpen = false;\n          }}\n          title='Neighbors'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.neighborDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default NeighborDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n\n@observer\nclass DataSheetDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"database\"\n          isOpen={appState.preferences.dataSheetDialogOpen}\n          onClose={() => {\n            appState.preferences.dataSheetDialogOpen = false;\n          }}\n          title='Data Sheet'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.dataSheetDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default DataSheetDialog;","import React from \"react\";\nimport PreferencesDialog from \"./PreferencesDialog\";\nimport ImportDialog from \"./ImportDialog\";\nimport GEXFImportDialog from \"./GEXFImportDialog\"\nimport OpenDialog from \"./OpenDialog\";\nimport NewProjectDialog from \"./NewProjectDialog\";\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\nimport ShareDialog from './ShareDialog';\nimport StatisticsDialog from './StatisticsDialog';\nimport HelpDialog from './HelpDialog';\nimport NeighborDialog from './NeighborDialog';\nimport DataSheetDialog from './DataSheetDialog';\n\nexport default class Dialogs extends React.Component {\n  render() {\n    return (\n      <div style={{ display: \"none\" }}>\n        <PreferencesDialog />\n        <ImportDialog />\n        <GEXFImportDialog />\n        <OpenDialog />\n        <OpenSnapshotDialog />\n        <NewProjectDialog />\n        <ProjectDetailDialog />\n        <SaveSnapshotDialog />\n        <RenameSnapshotDialog />\n        <ShareDialog />\n        <StatisticsDialog />\n        <HelpDialog />\n        <NeighborDialog />\n        <DataSheetDialog />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nimport appState from \"../stores/index\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport argologo from '../images/argologo.png';\n\nimport { LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS } from '../constants';\n\n@observer\nclass RegularNavbar extends React.Component {\n  render() {\n    return (\n      <nav className={classnames([Classes.NAVBAR])}>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <a href={LOGO_URL} target=\"_blank\">\n            <img title=\"Argo Lite\" id=\"Argo logo\" src={argologo} width=\"35\" height=\"35\"></img>\n          </a>\n          <div className={classnames([Classes.NAVBAR_HEADING])}> &nbsp; Argo <small>Lite</small></div>\n          {/* <a\n            href=\"https://poloclub.github.io/argo-graph/\"\n            target='_blank'\n            style={{\n              padding: '6px 10px 6px 10px',\n              backgroundColor: 'pink',\n              color: 'white',\n              borderRadius: '4px',\n              textDecoration: 'none'\n            }}\n          >\n            Learn more about Argo\n          </a> */}\n          <Popover\n            content={\n              <Menu>\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\n                  {\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\n                      const sampleSnapshotTitle = sample[0];\n                      const sampleSnapshotStrapiUuid = sample[1];\n\n                      return (\n                        <MenuItem\n                          iconName=\"graph\"\n                          text={sampleSnapshotTitle}\n                          onClick={() => {\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\n                          }}\n                        />\n                      );\n                    })\n                  }\n\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from CSV...\"\n                  onClick={() => (appState.import.dialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from GEXF...\"\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-open\"\n                  text=\"Open Snapshot\"\n                  onClick={() => { appState.preferences.openSnapshotDialogOpen = true }}\n                />\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"download\"\n                  text=\"Save Snapshot\"\n                  onClick={() => {\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\n                    appState.project.isSaveSnapshotDialogOpen = true\n                  }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-share\"\n                  text=\"Publish and Share Snapshot\"\n                  onClick={() => { appState.preferences.shareDialogOpen = true }}\n                />\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"document\"\n            >\n              Graph\n            </Button>\n          </Popover>\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"Data Sheet\"\n                  iconName=\"pt-icon-database\"\n                  onClick={() => {\n                    appState.graph.frame.pauseLayout();\n                    appState.preferences.dataSheetDialogOpen = true;\n                    this.forceUpdate();\n                  }}\n                />\n                <MenuItem\n                  text=\"Statistics\"\n                  iconName=\"pt-icon-timeline-bar-chart\"\n                  onClick={() => { appState.preferences.statisticsDialogOpen = true }}\n                />\n                <MenuItem text=\"Filters\" iconName=\"graph\">\n                  <MenuItem\n                    text=\"Show All Nodes\"\n                    onClick={() => {\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 PageRank\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                          return n2[\"pagerank\"] - n1[\"pagerank\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 Degree\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"degree\"] && n2[\"degree\"]) {\n                          return n2[\"degree\"] - n1[\"degree\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Hide All Nodes\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                </MenuItem>\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"pt-icon-wrench\"\n            >\n              Tools\n            </Button>\n          </Popover>\n        </div>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          {appState.graph.hasGraph && appState.graph.frame && (\n            <div style={{ display: \"inline\" }}>\n\n\n              <Tooltip\n                content={appState.graph.frame.paused ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\n                position={Position.BOTTOM}\n              >\n                <Button\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n                  iconName={appState.graph.frame.paused ? \"play\" : \"pause\"}\n                  text={appState.graph.frame.paused ? \"Resume Layout\" : \"Pause Layout\"}\n                  onClick={() => {\n                    if (appState.graph.frame.paused) {\n                      appState.graph.frame.resumeLayout();\n                      this.forceUpdate();\n                    } else {\n                      appState.graph.frame.pauseLayout();\n                      this.forceUpdate();\n                    }\n                  }}\n                />\n              </Tooltip>\n            </div>\n          )}\n        </div>\n        <div\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\n        >\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"graph\"\n            onClick={() => {\n              appState.project.isRenameSnapshotDialogOpen = true;\n            }}\n          >\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\n          </Button>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"cog\"\n            onClick={() => {\n              appState.preferences.dialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"help\"\n            onClick={() => {\n              appState.preferences.helpDialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"minimize\"\n            onClick={() => {\n              appState.preferences.turnOnMinimalMode()\n            }}\n          />\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <a\n            href={GITHUB_URL}\n            target='_blank'\n            style={{\n              color: appState.preferences.darkMode ? 'white' : 'black',\n              fontSize: '120%',\n              textDecoration: 'none'\n            }}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\n@observer\nclass MinimalNavbar extends React.Component {\n  render() {\n    return appState.graph.frame && (\n      <div>\n        <div\n          className={classnames(\"minimal-navbar-left\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a\n              className={classnames(\"pt-button pt-icon-maximize\", appState.graph.frame.paused ? \"pt-icon-play\" : \"pt-icon-pause\")}\n              role=\"button\"\n              onClick={() => {\n                if (appState.graph.frame.paused) {\n                  appState.graph.frame.resumeLayout();\n                  this.forceUpdate();\n                } else {\n                  appState.graph.frame.pauseLayout();\n                  this.forceUpdate();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className={classnames(\"minimal-navbar-right\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a className=\"pt-button pt-icon-maximize\" role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\n            <a className=\"pt-button pt-icon-help\" role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\n            <a className=\"pt-button pt-icon-document-open\" role=\"button\" href={window.location} target=\"_blank\"></a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass Navbar extends React.Component {\n  render() {\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Icon,\n  Card,\n  Classes,\n  Spinner,\n  NonIdealState,\n  FocusStyleManager\n} from \"@blueprintjs/core\";\nimport appState from \"../stores/index\";\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\n\n// Argo-lite: In lite, home screen is replaced by a loading screen\n// since there will always be a default graph showing.\n@observer\nclass WorkspaceView extends React.Component {\n  render() {\n    return (\n      <div className=\"workspace\">\n        {/* <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            appState.project.isNewProjectDialogOpen = true;\n          }}\n        >\n          <Icon iconName=\"plus\" /> Create New Project\n        </Card>\n        <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            requestOpenWorkspaceFolder();\n          }}\n        >\n          <Icon iconName=\"cog\" /> Manage Workspace\n        </Card>\n        <hr />\n        <div className=\"argo-menu-list-header\">My Projects</div>\n        <div style={{ paddingBottom: '100px' }}>\n          {appState.project.isFetching ? (\n            <div style={{ textAlign: \"center\" }}>\n              <Spinner />\n            </div>\n          ) : appState.project.projects.length > 0 ? (\n            appState.project.projects.map(project => {\n              return (\n                <div key={project.name}>\n                  <Card\n                    interactive={true}\n                    elevation={Card.ELEVATION_TWO}\n                    onClick={() => {\n                      appState.project.currentProject = project;\n                      appState.project.isProjectDetailDialogOpen = true;\n                    }}\n                  >\n                    <h5>{project.name}</h5>\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\n                  </Card>\n                </div>\n              );\n            })\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              Workspace is empty. Start by creating a new project.\n            </div>\n          )}\n        </div> */}\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\n          <Spinner />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkspaceView;","import React from \"react\";\nimport appState from \"../stores\";\n\nexport default class ThreeJSVis extends React.Component {\n  componentDidMount() {\n    appState.graph.setUpFrame();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"graph-container\"\n        style={{\n          width: \"100vw\",\n          height: \"90vh\",\n          flex: \"1\",\n          position: \"absolute\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass GlobalPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeOutRef: null,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      shapeOptionOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Collapsable Option: Color */}\n        <Collapsable\n          name=\"Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() =>\n            this.setState({\n              colorOptionOpen: !this.state.colorOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <section>\n              <p style={{textAlign:\"left\"}}>Color By:\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect  \n                    items={appState.graph.allPropertiesKeyList}\n                    onSelect={it => (appState.graph.nodes.colorBy = it)}\n                    value={appState.graph.nodes.colorBy}\n                  />\n                </span>\n              </p>\n            </section>\n           \n            <section> \n              <p style={{textAlign:\"left\"}}>Scale Type:\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect\n                    items={Object.keys(scales)}\n                    onSelect={it => (appState.graph.nodes.color.scale = it)}\n                    value={appState.graph.nodes.color.scale}\n                  />\n                </span>\n              </p>\n            </section>\n           \n            <section >\n              <p style={{textAlign:\"left\"}}>Gradient: &nbsp;  \n                <span style={{float:\"right\"}}>\n                    <Popover2>\n                      <Button                  \n                        text=\"  \"\n                        style={{\n                          backgroundImage: \"inherit\",\n                          backgroundColor: appState.graph.nodes.color.from\n                        }}\n                      />\n                      <SketchPicker\n                        color={appState.graph.nodes.color.from}\n                        onChange={it => (appState.graph.nodes.color.from = it.hex)}\n                      />\n                    </Popover2>\n                    &nbsp; &#8594; &nbsp;\n                    <Popover2>\n                    <Button\n                      text=\"  \"\n                      style={{\n                        backgroundImage: \"inherit\",\n                        backgroundColor: appState.graph.nodes.color.to\n                      }}\n                    />\n                    <SketchPicker\n                      color={appState.graph.nodes.color.to}\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\n                    />\n                  </Popover2>\n                </span>\n              </p>\n            </section>\n            <section style={{marginTop:\"-1em\"}}>\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\n              <defs>\n                <linearGradient\n                  x1=\"0%\"\n                  y1=\"50%\"\n                  x2=\"100%\"\n                  y2=\"50%\"\n                  id=\"theGradient\"\n                >\n                  <stop\n                    stopColor={appState.graph.nodes.color.from}\n                    stopOpacity=\"1\"\n                    offset=\"0%\"\n                  />\n                  <stop\n                    stopColor={appState.graph.nodes.color.to}\n                    stopOpacity=\"1\"\n                    offset=\"100%\"\n                  />\n                </linearGradient>\n              </defs>\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"100%\"\n                height=\"50\"\n                fill=\"url(#theGradient)\"\n              />\n            </svg>\n            </section>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Size */}\n        <Collapsable\n          name=\"Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              sizeOptionOpen: !this.state.sizeOptionOpen\n            })\n          }\n        >\n         \n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <section> \n              <p style={{textAlign:\"left\"}}>Scale By:\n                <span style={{float:\"right\"}}>\n                  <Select\n                    items={appState.graph.allPropertiesKeyList}\n                    itemRenderer={CommonItemRenderer}\n                    filterable={false}\n                    onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\n                  >\n                    <Button text={appState.graph.nodes.sizeBy} />\n                  </Select>\n                </span>\n              </p>\n            </section>\n            <section> \n              <p style={{textAlign:\"left\"}}>Scale Type:\n                <span style={{float:\"right\"}}>\n                  <Select\n                  items={Object.keys(scales)}\n                  itemRenderer={CommonItemRenderer}\n                  filterable={false}\n                  onItemSelect={it => (appState.graph.nodes.size.scale = it)}\n                  >\n                    <Button text={appState.graph.nodes.size.scale} />\n                  </Select>\n                </span>\n              </p>\n            </section>\n         \n            Size Range:\n            <br />\n            <RangeSlider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={([a, b]) => {\n                runInAction(\"update scale\", () => {\n                  appState.graph.nodes.size.min = a;\n                  appState.graph.nodes.size.max = b;\n                });\n              }}\n              value={[\n                appState.graph.nodes.size.min,\n                appState.graph.nodes.size.max\n              ]}\n            />\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Shape */}\n        <Collapsable\n          name=\"Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              shapeOptionOpen: !this.state.shapeOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <section> <p style={{textAlign:\"left\"}}> Node Shape:\n          <span style={{float:\"right\"}}>\n            <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => (appState.graph.nodes.shape = it)}\n              >\n                <Button  text={appState.graph.nodes.shape} />\n              </Select>\n              </span>\n            </p></section>          \n          </div>\n        </Collapsable>\n        <br/>\n        <small>\n          \n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\n          have override styles.  &nbsp;  \n          <Button className={\"pt-small\"} text=\"Clear\" onClick={() => (appState.graph.overrides = new Map())} />\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default GlobalPanel;","import React from \"react\";\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Switch\n      label={name}\n      checked={isOpen}\n      onChange={onToggle}\n      className={Classes.ALIGN_RIGHT}\n    />\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass SelectionPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeOptionOpen: false,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      labelOptionOpen: false\n    };\n  }\n\n  twoLayerUpdate = (nodeId, key, value) => {\n    if (!appState.graph.overrides.has(nodeId)) {\n      appState.graph.overrides.set(nodeId, new Map());\n    }\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\n    if (value !== null) {\n      nodeAttrs.set(key, value);\n    } else {\n      nodeAttrs.delete(key);\n      if (nodeAttrs.size === 0) {\n        appState.graph.overrides.delete(nodeId);\n      }\n    }\n  };\n\n  batchTwoLayerUpdate = (nodes, key, value) => {\n    runInAction(\"update entire selection\", () => {\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n            if (this.state.sizeOptionOpen) {\n              this.setState(\n                {\n                  sizeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  sizeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    appState.graph.overrideConfig.size\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <Slider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={it => {\n                appState.graph.overrideConfig.size = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"size\",\n                  it\n                );\n              }}\n              value={appState.graph.overrideConfig.size}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n            if (this.state.colorOptionOpen) {\n              this.setState(\n                {\n                  colorOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  colorOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    appState.graph.overrideConfig.color\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <section> <p style={{textAlign:\"left\"}}>\n            Choose Color:\n            <span style={{float:\"right\"}}>\n            <Popover2>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.overrideConfig.color\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.overrideConfig.color}\n                onChange={it => {\n                  appState.graph.overrideConfig.color = it.hex;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    it.hex\n                  );\n                }}\n              />\n            </Popover2>\n            </span>\n            </p>\n            </section>\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Label\"\n          isOpen={this.state.labelOptionOpen}\n          onToggle={() => {\n            if (this.state.labelOptionOpen) {\n              this.setState(\n                {\n                  labelOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  labelOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    appState.graph.overrideConfig.label\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Custom Label:\n            <input\n              value={appState.graph.overrideConfig.label}\n              onChange={it => {\n                appState.graph.overrideConfig.label = it.target.value;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"label\",\n                  it.target.value\n                );\n              }}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n            if (this.state.shapeOptionOpen) {\n              this.setState(\n                {\n                  shapeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  shapeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    appState.graph.overrideConfig.shape\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <section> <p style={{textAlign:\"left\"}}>\n            Node Shape:\n            <span style={{float:\"right\"}}>\n            <Select\n              items={[\n                \"circle\",\n                \"square\",\n                \"triangle\",\n                \"pentagon\",\n                \"hexagon\",\n                \"octagon\"\n              ]}\n              itemRenderer={CommonItemRenderer}\n              filterable={false}\n              onItemSelect={it => {\n                appState.graph.overrideConfig.shape = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"shape\",\n                  it\n                );\n              }}\n            >\n              <Button text={appState.graph.overrideConfig.shape} />\n            </Select>\n            </span>\n            </p>\n            </section>\n          </div>\n        </SwitchCollapsable>\n      </div>\n    );\n  }\n}\n\nexport default SelectionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\n\n@observer\nclass NodesPanel extends React.Component {\n  getRenderedNodes = () => {\n    if (appState.graph.selectedNodes.length === 0) {\n      return (\n        <div>\n          <p>Modifying All Nodes</p>\n        </div>\n      );\n    }\n    return (\n      <p>{`Modifying ${pluralize(\n        \"Node\",\n        appState.graph.selectedNodes.length,\n        true\n      )}`}</p>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getRenderedNodes()}\n        {appState.graph.selectedNodes.length === 0 ? (\n          <GlobalPanel />\n        ) : (\n          <SelectionPanel />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NodesPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport mouse from \"../../graph-frontend/src/select\";\n@observer\nclass EdgesPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          timeOutRef: null,\n          sizeOptionOpen: false,\n          thicknessOptionOpen: false,\n        };\n      }\n\n    render() {\n        return (\n            <div>\n                <p>{`Modifying All Edges`}</p>\n\n\n                {/* Collapsable Option: Color */}\n                <Collapsable\n                    name=\"Color\"\n                    isOpen={this.state.colorOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                        colorOptionOpen: !this.state.colorOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <section>\n                            <p style={{display: \"inline\"}}>Select Edge Color: </p>\n                            <div style={{display: \"inline\", float: \"right\"}}>\n                                <Popover2>\n                                    <Button\n                                    text=\"  \"\n                                    style={{\n                                        backgroundImage: \"inherit\",\n                                        backgroundColor: appState.graph.edges.color\n                                    }}\n                                    />\n                                    <SketchPicker\n                                    color={appState.graph.edges.color}\n                                    onChange={it => {\n                                        (appState.graph.edges.color = it.hex)\n                                    }}\n                                    />\n                                </Popover2>\n                            </div>\n                        </section>\n                    </div>\n                </Collapsable>\n\n                <div>\n                    <section>\n                        <p style={{display: \"inline\"}}>Directed Graph? test2: </p>\n                        <div style={{display: \"inline\", float: \"right\"}}>\n                              <input \n                                type=\"checkbox\"\n                                onChange={it => {\n                                    console.log(appState.graph.directedOrNot);\n                                    appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                }\n                                }\n                              />\n                        </div>\n                    </section>\n                </div>\n\n                {/* Collapsable Option: Thickness */}\n                {/* <Collapsable\n                    name=\"Thickness\"\n                    isOpen={this.state.thicknessOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                            thicknessOptionOpen: !this.state.thicknessOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <section>\n                            <p>Select Edge Thickness: </p>\n                            <div style={{display: \"inline\", float: \"right\"}}>\n                               \n                            </div>\n                        </section>\n                    </div>\n                </Collapsable> */}\n            </div>\n        );\n    }\n}\n\nexport default EdgesPanel;","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass LabelsPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <Button\n          id=\"hideAll\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideAllLabels()}\n        >\n          Hide All Labels\n        </Button>\n        <Button\n          style={{display:\"none\"}}\n          id=\"showAll\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showAllLabels()}\n        >\n          Show All Labels\n        </Button>\n        <Button\n          style={{marginTop:\"1em\"}}\n          id=\"hideSelected\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\n        >\n          Hide Labels of Selected Nodes\n        </Button>\n        <Button\n          style={{marginTop:\"1em\",display:\"none\"}}\n          id=\"showSelected\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showSelectedLabels()}\n        >\n          Show Labels of Selected Nodes\n        </Button>\n        <div style={{height: '30px'}} />\n        <h6>Label Size</h6>\n        <Slider\n          min={0.5}\n          max={3}\n          stepSize={0.1}\n          onChange={value => {\n            appState.graph.nodes.labelSize = value;\n          }}\n          value={appState.graph.nodes.labelSize}\n        />\n        <div style={{height: '30px'}} />\n        <h6>Label Length</h6>\n        <Slider\n          min={1}\n          max={32}\n          stepSize={0.1}\n          labelStepSize={5}\n          onChange={value => {\n            appState.graph.nodes.labelLength = value;\n          }}\n          value={appState.graph.nodes.labelLength}\n        />\n        <div style={{height: '30px'}} />\n        <h6>Label By</h6> \n        <Select\n          items={appState.graph.allPropertiesKeyList}\n          itemRenderer={CommonItemRenderer}\n          filterable={false}\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\n        >\n          <Button text={appState.graph.nodes.labelBy} />\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default LabelsPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\n@observer\nclass NodeDetail extends React.Component {\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    const formatLongFloat = (nodeAttributeValue) => {\n      const num = Number(nodeAttributeValue);\n      if (Number.isNaN(num) || num > 1 || num < 0) {\n        // Do not format just return original\n        return nodeAttributeValue;\n      }\n      // Format to no more than 3 significant digit.\n      return Number.parseFloat(num).toPrecision(3);\n    };\n\n    return (\n      <div\n        className={classnames(\n          // 'overlay-card',\n          \"right-overlay-card\",\n          \"transparent-frame\"\n        )}\n      >\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\n          <table\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\n            style={{\n              width: \"100%\",\n              padding: '0',\n            }}\n          >\n            \n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\n                <tr key={`${it}-${i}`}>\n                  <td style={{ padding: '5px 10px' }}>{it}</td>\n                  <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeDetail;","import React from \"react\";\n\nimport { format } from \"d3-format\";\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\nimport appState from \"../stores\";\nimport { observer } from \"mobx-react\";\n\nfunction Legends() {\n  return (\n    <div className=\"legends\" style={{visibility: appState.preferences.isLegendShowing ? 'visible' : 'hidden'}}>\n      <LegendSize\n        className=\"scale-legend\"\n        direction=\"row\"\n        itemDirection=\"column\"\n        itemMargin=\"0\"\n        shapeMargin=\"5px 0\"\n        labelFormat={format(\".4f\")}\n        scale={appState.graph.nodeSizeScale}\n        shape={props => {\n          const { size } = props;\n          return (\n            <svg width={size} height={size}>\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\n            </svg>\n          );\n        }}\n      />\n      <LegendLinear\n        direction=\"row\"\n        itemDirection=\"column\"\n        shape=\"circle\"\n        scale={appState.graph.nodeColorScale}\n        labelFormat={format(\".4f\")}\n      />\n    </div>\n  );\n}\n\nexport default observer(Legends);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges && `Total Nodes: ${appState.graph.metadata.fullNodes}, Total Edges: ${appState.graph.metadata.fullEdges},`} Hidden Nodes: {appState.graph.numHiddenNodes}</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\n\n@observer\nclass SelectionActionPanel extends React.Component {\n  render() {\n      // Only relevant when there's exact 1 node selected.\n      // To display number of hidden nodes if exists\n      let numHiddenNeighbor = 0;\n      if (appState.graph.selectedNodes.length === 1) {\n        if (appState.graph.lastSelectedSingleNode) {\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\n        }\n      }\n\n      return (\n        <div\n            className=\"argo-selection-action-panel\"\n            style={{\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n            }}\n        >\n            <Tooltip\n                content=\"Pin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"pin\"\n                    text=\"Pin\"\n                    intent={Intent.PRIMARY}\n                    onClick={() => {\n                    appState.graph.frame.pinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Unpin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"unpin\"\n                    text=\"Unpin\"\n                    intent={Intent.WARNING}\n                    onClick={() => {\n                    appState.graph.frame.unpinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Hide Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"delete\"\n                    text=\"Hide\"\n                    intent={Intent.DANGER}\n                    onClick={() => {\n                    appState.graph.hideNodes(\n                        appState.graph.frame.getSelectedIds()\n                    );\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            {// This menu only shows when there's exactly 1 node selected\n              appState.graph.selectedNodes.length === 1 && (\n                <div style={{ display: \"inline\" }}>\n                  <Tooltip\n                    content=\"Open Neighbor Dialog\"\n                    position={Position.BOTTOM}\n                  >\n                    <Button\n                      className={classnames([\n                        Classes.BUTTON,\n                        Classes.MINIMAL\n                      ])}\n                      iconName=\"graph\"\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\n                      intent={Intent.PRIMARY}\n                      onClick={() => {\n                        appState.graph.frame.pauseLayout();\n                        appState.preferences.neighborDialogOpen = true;\n                        this.forceUpdate();\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n            )}\n        </div>\n      );\n  }\n}\n\nexport default SelectionActionPanel;","import React from \"react\";\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../stores\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { addNode } from \"../ipc/client\";\nimport NodesPanel from \"./panels/NodesPanel\";\nimport EdgesPanel from \"./panels/EdgesPanel\";\nimport LabelsPanel from \"./panels/LabelsPanel\";\nimport NodeDetail from \"./panels/NodeDetailPanel\";\nimport Legends from \"./Legends\";\nimport StatusBar from './StatusBar';\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\n\n// TODO: migrate to simple select\n\n@observer\nclass RenderOptionsCard extends React.Component {\n  render() {\n    return (\n      <div>\n        <h4>Graph Options</h4>\n        <Tabs2 animate id=\"graph-options\">\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\n          <Tabs2.Expander />\n        </Tabs2>\n      </div>\n    );\n  }\n}\n\n//\n\n@observer\nclass FloatingCards extends React.Component {\n  optionsVisible = {\n    left: '0em'\n  }\n  optionsInvisible = {\n    left: '-22em'\n  }\n  sideButtonVis = {\n    marginLeft: '50px'\n  }\n  sideButtonInv = {\n    marginLeft: '-15px'\n  }\n  toggleOptions = () => {\n    appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\n  };\n  render() {\n    return (\n      <div className=\"floating-overlay\">\n        <div className=\"left-cards\">\n          {appState.search.panelOpen && (\n            <div\n              className={classnames(\n                Classes.CARD,\n                Classes.ELEVATION_2,\n                \"overlay-card\",\n                \"left-overlay-card\"\n              )}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"left\",\n                  alignItems: \"left\"\n                }}\n              >\n                <h4 style={{ width: 140 }}>\n                  {appState.search.numCandidates} results\n                </h4>\n                <div style={{ width: 20 }} />\n                <h4>Order</h4>\n                <div style={{ width: 5 }} />\n                <SimpleSelect\n                  style={{ \"margin-bottom\": 10 }}\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\n                  onSelect={it => (appState.graph.searchOrder = it)}\n                  value={appState.graph.searchOrder}\n                />\n              </div>\n              <table\n                className={classnames(\n                  Classes.TABLE,\n                  Classes.TABLE_STRIPED,\n                  Classes.INTERACTIVE\n                )}\n                style={{\n                  width: \"100%\",\n                  userSelect: \"none\"\n                }}\n              >\n                <tbody>\n                  {appState.search.candidates.map((node, i) => (\n                    <tr\n                      key={i}\n                      onMouseOver={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          true\n                        )\n                      }\n                      onMouseDown={() => addNode(node.node_id)}\n                      onMouseLeave={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          false\n                        )\n                      }\n                    >\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <center>\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum > 0) {\n                      appState.search.pageNum -= 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Prev&nbsp;\n                </a>\n                &nbsp;\n                {appState.search.pageNum !== 0 ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = 0;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    1&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}&nbsp;\n                    </a>\n                  )}\n                ...<b>&nbsp;</b>\n                {appState.search.pages.map(i => {\n                  if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    i == appState.search.pageNum\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        style={{\n                          color: \"#111111\",\n                          pointerEvents: \"none\",\n                          cursor: \"default\"\n                        }}\n                      >\n                        {appState.search.pageNum + 1}&nbsp;\n                      </a>\n                    );\n                  } else if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    ((i > appState.search.pageNum - 4 &&\n                      i < appState.search.pageNum + 4) ||\n                      (appState.search.pageNum < 4 && i < 8) ||\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\n                        i > appState.search.maxPage - 8))\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        onMouseDown={() => {\n                          appState.search.pageNum = i;\n                          appState.search.candidates = appState.search.allCands.slice(\n                            appState.search.pageNum * appState.search.nPerPage,\n                            (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                          );\n                        }}\n                      >\n                        {i + 1}&nbsp;\n                      </a>\n                    );\n                  }\n                })}\n                ...&nbsp;\n                {appState.search.pageNum !== appState.search.maxPage ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = appState.search.maxPage;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    {appState.search.maxPage + 1}&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}\n                    </a>\n                  )}\n                &nbsp;\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum < appState.search.maxPage) {\n                      appState.search.pageNum += 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Next\n                </a>\n                <br />\n                <br />\n                <h5>Page {appState.search.pageNum + 1}</h5>\n              </center>\n            </div>\n          )}\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_2,\n              \"overlay-card\",\n              \"left-overlay-card\",\n              \"transparent-frame\",\n              \"left-cards\"\n            )}\n            style={appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\n          >\n            <button className=\"openbtn2\" onClick={this.toggleOptions}> &#8249;\n            </button>\n            <br />\n            <RenderOptionsCard />\n          </div>\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\n            \"transparent-frame\")} style={{ width: \"1em\", paddingTop: \"1em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\" }}>\n            <button className=\"openbtn\" onClick={this.toggleOptions} style={appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\n              &#9776;\n              </button>\n          </div>\n        </div>\n        {appState.graph.selectedNodes.length === 1 && (\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\n        )}\n\n        {appState.graph.selectedNodes.length !== 1 && appState.graph.currentlyHovered && (\n          <NodeDetail node={appState.graph.currentlyHovered.data.ref} />\n        )}\n\n        <Legends />\n        <StatusBar />\n        {// This menu only shows when there are nodes selected\n          appState.graph.selectedNodes.length > 0 && !appState.preferences.isNavbarInMinimalMode && <SelectionActionPanel />\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default FloatingCards;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  FocusStyleManager,\n  NonIdealState\n} from \"@blueprintjs/core\";\nimport Dialogs from \"./components/Dialogs\";\nimport Navbar from \"./components/Navbar\";\nimport WorkspaceView from \"./components/WorkspaceView\";\nimport appState from \"./stores/index\";\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\nimport FloatingCards from \"./components/FloatingCards\";\nimport registerIPC from \"./ipc/client\";\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\n\nimport keydown, { Keys } from \"react-keydown\";\n\nregisterIPC();\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfetchWorkspaceProjects();\n\nappState.preferences.loadUserConfig();\n\nconst { DELETE, BACKSPACE, P, U } = Keys;\n\n// Respond to window resize, also triggered after frame is loaded.\nfunction respondToResize() {\n  if (!appState.graph.frame) {\n    window.setTimeout(respondToResize, 1000);\n    return;\n  }\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\n    appState.preferences.turnOnMinimalMode();\n  }\n}\n\nrespondToResize();\n\nwindow.addEventListener('resize', respondToResize);\n\n@keydown\n@observer\nclass App extends React.Component {\n  componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\n          this.forceUpdate();\n        }\n      } else if (keydown.event.which === P) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.pinSelectedNodes();\n        }\n      } else if (keydown.event.which === U) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.unpinSelectedNodes();\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div\n        className={classnames({\n          \"app-wrapper\": true,\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n      >\n        <Navbar />\n        <main className=\"main\">\n          {appState.graph.hasGraph ? (\n            <ThreeJSVis />\n          ) : (\n            <WorkspaceView />\n          )}\n        </main>\n        {appState.graph.hasGraph && <FloatingCards />}\n        <Dialogs />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","import * as scale from \"d3-scale\";\n\n// Argo-lite Iframe widget mode\n// Build the app separately and host it on a different URL\n// If set to true, the app will begin in widget mode\n// hiding certain panels, logo, and minimap\n// and show a minimalist Navbar.\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\n\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-graph-lite\";\nexport const LOGO_URL = \"https://github.com/poloclub/argo-graph-lite\";\nexport const GITHUB_URL = \"https://github.com/poloclub/argo-graph-lite\";\n// Argo-lite Graph Sharing backend Strapi Server:\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\n  [\"Les Miserables\", \"31d8fb5a-b540-4db6-a2df-9c0158e152f0\"],\n  [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"]\n];\n\n// When resizing window or running on mobile,\n// used to determine whether screen\n// is considered small.\nexport const MOBILE_WIDTH_CUTOFF = 800;\nexport const MOBILE_HEIGHT_CUTOFF = 480;\n\nexport const SCALE_LINEAR = \"Linear Scale\";\nexport const SCALE_LOG = \"Log Scale\";\n\nexport const scales = {\n  [SCALE_LINEAR]: scale.scaleLinear,\n  [SCALE_LOG]: scale.scaleLog\n};\n\nexport const LOAD_USER_CONFIG = \"load-user-config\";\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\nexport const SAVE_USER_CONFIG = \"save-user-config\";\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\n\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\n\nexport const DELETE_FILE = \"delete-file\";\nexport const RENAME_FILE = \"rename-file\";\n\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\n\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\nexport const SAVE_TOAST_KEY = \"save-const-key\";\n\nexport const MENU_LOAD = \"menu-load\";\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\n  \"menu-save-graph-state-to-project\";\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\n\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\n\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\n\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\n\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\nexport const ONLY_EDGE_FILE = \"only edges file\";\n\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\nexport const ONLY_GRAPH_FILE = \"only graph file\";\nexport const IMPORT_GRAPH = \"import-graph\";\nexport const IMPORTED_GRAPH = \"imported-graph\";\nexport const OPEN_GRAPH = \"open-graph\";\nexport const OPENED_GRAPH = \"opened-graph\";\n\nexport const SEARCH_REQUEST = \"search-request\";\nexport const SEARCH_RESPONSE = \"search-response\";\n\nexport const ADD_NODES = \"add-nodes\";\nexport const ADD_SELECT_NODE = \"add-select-node\";\nexport const ADD_NODE = \"add-node\";\nexport const GET_NEIGHBORS = \"get-neighbors\";\n","import { runInAction, toJS } from 'mobx';\nimport { Intent } from '@blueprintjs/core';\nimport { demapify } from 'es6-mapify';\n\nimport appState from '../stores/index';\nimport {\n  ADD_NODE,\n  ADD_NODES,\n  ADD_SELECT_NODE,\n  CHOOSE_EDGE_FILE,\n  CHOOSE_GRAPH_FILE,\n  CHOOSE_NODE_FILE,\n  CHOOSE_STATE_FILE,\n  CHOSEN_EDGE_FILE,\n  CHOSEN_GRAPH_FILE,\n  CHOSEN_NODE_FILE,\n  CHOSEN_STATE_FILE,\n  GET_NEIGHBORS,\n  IMPORT_GRAPH,\n  IMPORTED_GRAPH,\n  LOAD_GRAPH_SQLITE,\n  LOADED_GRAPH_SQLITE,\n  LOADED_GRAPH_STATE,\n  MENU_IMPORT_CSV,\n  MENU_LOAD,\n  MENU_NEW_PROJECT,\n  MENU_SAVE_GRAPH_SQLITE,\n  MENU_SAVE_GRAPH_STATE,\n  CREATE_NEW_PROJECT,\n  CREATED_NEW_PROJECT,\n  OPEN_GRAPH,\n  OPENED_GRAPH,\n  FETCH_WORKSPACE_PROJECTS,\n  FETCHED_WORKSPACE_PROJECTS,\n  SAVE_GRAPH_SQLITE,\n  SAVE_GRAPH_STATE,\n  SAVED_GRAPH_JSON,\n  SAVED_GRAPH_STATE,\n  SEARCH_REQUEST,\n  SEARCH_RESPONSE,\n  SHOW_ITEM_IN_FOLDER,\n  SAVED_GRAPH_STATE_TO_PROJECT,\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\n  SAVE_GRAPH_STATE_TO_PROJECT,\n  DELETE_FILE,\n  RENAME_FILE,\n  SHOW_WORKSPACE_FOLDER,\n  LOAD_USER_CONFIG,\n  LOADED_USER_CONFIG,\n  SAVED_USER_CONFIG,\n  SAVE_USER_CONFIG,\n  CHANGE_WORKSPACE_FOLDER,\n  CHANGED_WORKSPACE_FOLDER,\n} from '../constants/index';\nimport { toaster } from '../notifications/client';\n\nimport createGraph from 'ngraph.graph';\nimport pageRank from 'ngraph.pagerank';\nimport parse from \"csv-parse/lib/sync\";\n// import worker from './worker';\n\n// TODO: Register web worker used by Argo-lite.\n\n// Argo-lite replacement for electron ipc.\nconst ipcRenderer = {\n  send: (eventString) => {\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\n  }\n}\n\nexport default function registerIPC() {\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\n  //   // Overwrite PreferenceStore values according to user config values,\n  //   // if present.\n  //   if (loadedObject.darkMode) {\n  //     appState.preferences.darkMode = true;\n  //   }\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\n  //     appState.preferences.workspacePath = loadedObject.workspace;\n  //   }\n  // });\n\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\n  //   toaster.show({\n  //     message: \"User configuration saved\",\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\n  //   runInAction('load saved graph', () => {\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //   });\n  // });\n\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\n  //   runInAction('load saved graph and state', () => {\n  //     console.log(loadedObject);\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //     if (loadedObject.state) {\n  //       appState.graph.loadImmediateStates(loadedObject.state);\n  //     }\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\n  //   appState.graph.loadImmediateStates(loadedObject);\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\n  //   toaster.show({\n  //     message: `Saved to snapshot ${snapshotName}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\n  //   appState.import.importConfig.nodeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\n  //   appState.import.importConfig.edgeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\n  //   appState.import.graphFile = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\n  //   appState.import.stateFile = path;\n  // });\n\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\n  //   appState.import.loading = false;\n  //   appState.import.dialogOpen = false;\n  //   appState.project.isFetching = true;\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n  // });\n\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\n  //   appState.graph.frame.dragLastNode();\n  // });\n\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\n  //   var cands = JSON.parse(candidates);\n  //   var ckeys = cands.map(x => x.node_id);\n  //   appState.search.allCands = Object.values(cands);\n  //   appState.search.pageNum = 0;\n  //   appState.search.nPerPage = 10;\n  //   appState.search.numCandidates = appState.search.allCands.length;\n  //   appState.search.maxPage = parseInt(\n  //     appState.search.allCands.length / appState.search.nPerPage,\n  //   );\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\n  //   appState.search.panelOpen = true;\n  //   if (appState.graph.frame) {\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\n  //   }\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\n  //   appState.graph.loadImmediateStates(stateStr);\n  // });\n\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\n  //   appState.project.isFetching = false;\n  //   appState.project.projects = projects;\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\n  //   if (appState.project.currentProject !== null) {\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\n  //     // This fetch needs to update the dialog also\n  //     const temp = appState.project.projects.filter((project) => {\n  //       return project.projectPath === appState.project.currentProject.projectPath;\n  //     });\n  //     if (temp.length === 1) {\n  //       appState.project.currentProject = temp[0];\n  //     } else {\n  //       appState.project.currentProject = null;\n  //     }\n      \n  //   }\n  // });\n\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\n  //   appState.preferences.saveUserConfig();\n  // });\n\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\n  //   appState.project.isNewProjectDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_LOAD, () => {\n  //   appState.preferences.openDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\n  //   appState.import.dialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\n  //   // Original implementation for opening a traditional system-level save file dialog\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\n    \n  //   // New implementation opening a dialog that saves snapshot to project\n  //   appState.project.isSaveSnapshotDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\n  //   requestSaveSnapshot();\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\n}\n\nexport function requestLoadSQLite() {\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\n}\n\nexport function addNode(node_id) {\n  ipcRenderer.send(ADD_NODE, node_id);\n}\n\nexport function requestNeighbors(\n  node_id,\n  attr = 'degree',\n  num = '10',\n  order = 'desc',\n) {\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\n}\n\nfunction requestSaveSQLite() {\n  ipcRenderer.send(\n    SAVE_GRAPH_SQLITE,\n    JSON.stringify({\n      graph: toJS(appState.graph.rawGraph),\n      metadata: toJS(appState.graph.metadata),\n      nodes: toJS(appState.graph.nodes),\n      overrides: toJS(demapify(appState.graph.overrides)),\n      nodePositions: appState.graph.frame.getPositions(),\n    }),\n  );\n}\n\nexport function requestChooseNodeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\n}\n\nexport function requestChooseEdgeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\n}\n\nexport function requestChooseGraphFile() {\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\n}\n\nexport function requestChooseStateFile() {\n  ipcRenderer.send(CHOOSE_STATE_FILE);\n}\n\nexport function requestOpen() {\n  ipcRenderer.send(\n    OPEN_GRAPH,\n    appState.import.graphFile,\n    appState.import.stateFile,\n  );\n}\n\n// Request to delete a file specified at filePath\nexport function requestDelete(filePath) {\n  ipcRenderer.send(DELETE_FILE, filePath);\n}\n\n/**\n * Request to rename a file specified at filePath\n * @param filePath where the file to be renamed is located\n * @param newName new file name with extension\n */\nexport function requestRename(filePath, newName) {\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\n}\n\nexport function requestSaveSnapshot(snapshotName) {\n  if (!snapshotName) {\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\n  } else {\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\n  }\n}\n\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n  const importConfig = {\n    hasNodeFile,\n    nodes: {\n      path: appState.import.importConfig.nodeFile.path,\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\n    },\n    edges: {\n      path: appState.import.importConfig.edgeFile.path,\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\n    },\n    delimiter,\n    newProjectName\n  };\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\n\n  // TODO: Potentially separate this out to web worker.\n  importGraphFromCSV(importConfig).then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nexport function requestImportGraphFromGexf() {\n  importGraphFromGexf().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.gexfDialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nasync function readCSV(fileObject, hasHeader, delimiter) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      const content = reader.result;\n      if (hasHeader) {\n        resolve(parse(content, {\n          comment: \"#\",\n          trim: true,\n          auto_parse: true,\n          skip_empty_lines: true,\n          columns: hasHeader,\n          delimiter\n        }));\n      }\n      resolve(parse(content, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      }));\n    }\n  });\n}\n\nasync function parseGEXF(content) {\n  const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(content,\"text/xml\");\n      const xmlEdges = xmlDoc.getElementsByTagName('edge');\n      const xmlNodes = xmlDoc.getElementsByTagName('node');\n      const xmlAttri = xmlDoc.getElementsByTagName('attributes')\n      \n      let nodeAttri = [];\n      let edgeAttri = [];\n      const edgesArr = [];\n      const nodesArr = [];\n      const nodeAttriOrdered = {};\n      \n      for (let i = 0, l = xmlAttri.length; i < l; i++) {\n        const curr = xmlAttri[i];\n        if (curr.getAttribute('class') === 'node') {\n          nodeAttri = curr.getElementsByTagName('attribute');\n        }\n        else if (curr.getAttribute('class') === 'edge') {\n          edgeAttri = curr.getElementsByTagName('attribute');\n        }\n      }\n      \n      for (let i = 0, l = nodeAttri.length; i < l; i++) {\n        const curr = nodeAttri[i];\n        nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\n      }\n\n      for (let i = 0, l = xmlEdges.length; i < l; i++) {\n        const currEdge = xmlEdges[i];\n        const s = currEdge.getAttribute('source').toString();\n        const t = currEdge.getAttribute('target').toString();\n        edgesArr.push({\n          source_id: s,\n          target_id: t,\n        });\n      }\n      for (let i = 0, l = xmlNodes.length; i < l; i++) {\n        const currNode = xmlNodes[i];\n        const id = currNode.getAttribute('id').toString();\n        const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\n        const nodeAttvalue = [];\n        if (nodeAttvalues.length != 0) {\n          nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\n        }\n        let node = { id: id, degree: 0, pagerank: 0, node_id: id};\n        for (let j = 0; j < nodeAttvalue.length; j++){\n          const value = nodeAttvalue[j].attributes[\"value\"].value;\n          const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\n          const attributeId = attributeIdElementAttribute.value;\n          node[nodeAttriOrdered[attributeId]] = value;\n        }\n        for (let j = 0; j < currNode.attributes.length; j++) {\n          const currAttri = currNode.attributes[j];\n            node[currAttri.name] = currAttri.value;\n        }\n        node[\"id\"] = id;\n        node[\"node_id\"] = id;\n        nodesArr.push(node);\n      }\n      return [nodesArr, edgesArr];\n}\n\nasync function readGEXF(fileObject) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  \n  return new Promise((resolve, reject) => {\n      reader.onload = () => {\n      const content = reader.result;\n      resolve(parseGEXF(content));\n    }\n  });\n}\n\nasync function importGraphFromCSV(config) {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  const graph = createGraph();\n  const degreeDict = {};\n  if (config.hasNodeFile) {\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\n    nodesArr =\n      nodesArr.map(\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\n  }\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\n  if (config.edges.createMissing) {\n    edges.forEach((it) => {\n      const from = it[fromId].toString();\n      const to = it[toId].toString();\n      if (!graph.hasNode(from)) {\n        graph.addNode(from, { id: from, degree: 0 });\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\n        degreeDict[from] = 0;\n      }\n      if (!graph.hasNode(to)) {\n        graph.addNode(to, { id: to, degree: 0 });\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\n        degreeDict[to] = 0;\n      }\n    });\n  }\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[fromId].toString();\n    const to = it[toId].toString();\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport async function importGraphFromGexf() {\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\n  let nodesArr = gexfParsed[0];\n  const edges = gexfParsed[1];\n  const graph = createGraph();\n  const degreeDict = {};\n\n  nodesArr.forEach((it) => {\n    const currNode = it[\"id\"].toString();\n    if (!graph.hasNode(currNode)) {\n      graph.addNode(currNode, it);\n      degreeDict[currNode] = 0;\n    }\n  });\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[\"source_id\"].toString();\n    const to = it[\"target_id\"].toString();\n\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport function runSearch(searchStr) {\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\n}\n\nexport function fetchWorkspaceProjects() {\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\n}\n\nexport function requestCreateNewProject(projectMetadata) {\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\n}\n\nexport function requestOpenWorkspaceFolder() {\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\n}\n\nexport function requestLoadUserConfig() {\n  ipcRenderer.send(LOAD_USER_CONFIG);\n}\n\nexport function requestSaveUserConfig(userConfig) {\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\n}\n\nexport function requestChangeWorkspace() {\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\n}","var $ = require(\"jquery\");\nfunction Edge(source, target) {\n  this.source = source;\n  this.target = target;\n  this.renderData = {};\n}\n\nfunction Node(id, size = 0.5) {\n  this.id = id;\n  this.index = id;\n  this.in = [];\n  this.out = [];\n  this.size = size;\n  this.renderData = {};\n  this.domainData = {};\n  this.x = 1;\n  this.y = 1;\n  this.vx = 1;\n  this.vy = 1;\n\n  /**\n   * Tells if a node is connected to a node of a certain id\n   */\n  this.connectedTo = function(id) {\n    outNodeIds = this.out.map(function(outNode) {\n      return outNode.id;\n    });\n    return $.inArray(id, outNodeIds) >= 0;\n  };\n}\n\nNode.prototype.connectNode = function(node) {\n  if (!this.connectedTo(node.id)) {\n    this.out.push(node);\n    return true;\n  }\n  return false;\n};\n\nexports.Edge = Edge;\nexports.Node = Node;\n","var THREE = require(\"three\");\n\nTHREE.MeshLine = function() {\n  this.positions = [];\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n  this.counters = [];\n  this.geometry = new THREE.BufferGeometry();\n\n  this.widthCallback = null;\n};\n\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\n  this.widthCallback = c;\n\n  this.positions = [];\n  this.counters = [];\n\n  if (g instanceof THREE.Geometry) {\n    for (var j = 0; j < g.vertices.length; j++) {\n      var v = g.vertices[j];\n      var c = j / g.vertices.length;\n      this.positions.push(v.x, v.y, v.z);\n      this.positions.push(v.x, v.y, v.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  if (g instanceof THREE.BufferGeometry) {\n    // read attribute positions ?\n  }\n\n  if (g instanceof Float32Array || g instanceof Array) {\n    for (var j = 0; j < g.length; j += 3) {\n      var c = j / g.length;\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  this.process();\n};\n\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\n  var aa = a * 6;\n  var ab = b * 6;\n  return (\n    this.positions[aa] === this.positions[ab] &&\n    this.positions[aa + 1] === this.positions[ab + 1] &&\n    this.positions[aa + 2] === this.positions[ab + 2]\n  );\n};\n\nTHREE.MeshLine.prototype.copyV3 = function(a) {\n  var aa = a * 6;\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n};\n\nTHREE.MeshLine.prototype.process = function() {\n  var l = this.positions.length / 6;\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n\n  for (var j = 0; j < l; j++) {\n    this.side.push(1);\n    this.side.push(-1);\n  }\n\n  var w;\n  for (var j = 0; j < l; j++) {\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n    else w = 1;\n    this.width.push(w);\n    this.width.push(w);\n  }\n\n  for (var j = 0; j < l; j++) {\n    this.uvs.push(j / (l - 1), 0);\n    this.uvs.push(j / (l - 1), 1);\n  }\n\n  var v;\n\n  if (this.compareV3(0, l - 1)) {\n    v = this.copyV3(l - 2);\n  } else {\n    v = this.copyV3(0);\n  }\n  this.previous.push(v[0], v[1], v[2]);\n  this.previous.push(v[0], v[1], v[2]);\n  for (var j = 0; j < l - 1; j++) {\n    v = this.copyV3(j);\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n  }\n\n  for (var j = 1; j < l; j++) {\n    v = this.copyV3(j);\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n  }\n\n  if (this.compareV3(l - 1, 0)) {\n    v = this.copyV3(1);\n  } else {\n    v = this.copyV3(l - 1);\n  }\n  this.next.push(v[0], v[1], v[2]);\n  this.next.push(v[0], v[1], v[2]);\n\n  for (var j = 0; j < l - 1; j++) {\n    var n = j * 2;\n    this.indices_array.push(n, n + 1, n + 2);\n    this.indices_array.push(n + 2, n + 1, n + 3);\n  }\n\n  if (!this.attributes) {\n    this.attributes = {\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n    };\n  } else {\n    this.attributes.position.copyArray(new Float32Array(this.positions));\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.copyArray(new Float32Array(this.next));\n    this.attributes.next.needsUpdate = true;\n    this.attributes.side.copyArray(new Float32Array(this.side));\n    this.attributes.side.needsUpdate = true;\n    this.attributes.width.copyArray(new Float32Array(this.width));\n    this.attributes.width.needsUpdate = true;\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\n    this.attributes.uv.needsUpdate = true;\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\n    this.attributes.index.needsUpdate = true;\n  }\n\n  this.geometry.addAttribute(\"position\", this.attributes.position);\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\n  this.geometry.addAttribute(\"next\", this.attributes.next);\n  this.geometry.addAttribute(\"side\", this.attributes.side);\n  this.geometry.addAttribute(\"width\", this.attributes.width);\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\n\n  this.geometry.setIndex(this.attributes.index);\n};\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nTHREE.MeshLine.prototype.advance = function(position) {\n  var positions = this.attributes.position.array;\n  var previous = this.attributes.previous.array;\n  var next = this.attributes.next.array;\n  var l = positions.length;\n\n  // PREVIOUS\n  memcpy(positions, 0, previous, 0, l);\n\n  // POSITIONS\n  memcpy(positions, 6, positions, 0, l - 6);\n\n  positions[l - 6] = position.x;\n  positions[l - 5] = position.y;\n  positions[l - 4] = position.z;\n  positions[l - 3] = position.x;\n  positions[l - 2] = position.y;\n  positions[l - 1] = position.z;\n\n  // NEXT\n  memcpy(positions, 6, next, 0, l - 6);\n\n  next[l - 6] = position.x;\n  next[l - 5] = position.y;\n  next[l - 4] = position.z;\n  next[l - 3] = position.x;\n  next[l - 2] = position.y;\n  next[l - 1] = position.z;\n\n  this.attributes.position.needsUpdate = true;\n  this.attributes.previous.needsUpdate = true;\n  this.attributes.next.needsUpdate = true;\n};\n\nTHREE.MeshLineMaterial = function(parameters) {\n  var vertexShaderSource = [\n    \"precision highp float;\",\n    \"\",\n    \"attribute vec3 position;\",\n    \"attribute vec3 previous;\",\n    \"attribute vec3 next;\",\n    \"attribute float side;\",\n    \"attribute float width;\",\n    \"attribute vec2 uv;\",\n    \"attribute float counters;\",\n    \"\",\n    \"uniform mat4 projectionMatrix;\",\n    \"uniform mat4 modelViewMatrix;\",\n    \"uniform vec2 resolution;\",\n    \"uniform float lineWidth;\",\n    \"uniform vec3 color;\",\n    \"uniform float opacity;\",\n    \"uniform float near;\",\n    \"uniform float far;\",\n    \"uniform float sizeAttenuation;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"vec2 fix( vec4 i, float aspect ) {\",\n    \"\",\n    \"    vec2 res = i.xy / i.w;\",\n    \"    res.x *= aspect;\",\n    \"\t vCounters = counters;\",\n    \"    return res;\",\n    \"\",\n    \"}\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    float aspect = resolution.x / resolution.y;\",\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\n    \"\",\n    \"    vColor = vec4( color, opacity );\",\n    \"    vUV = uv;\",\n    \"\",\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\n    \"\",\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\n    \"    vec2 prevP = fix( prevPos, aspect );\",\n    \"    vec2 nextP = fix( nextPos, aspect );\",\n    \"\",\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\n    \"\",\n    \"    if( sizeAttenuation == 1. ) {\",\n    \"        w = 1.8 * lineWidth * width;\",\n    \"    }\",\n    \"\",\n    \"    vec2 dir;\",\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\n    \"    else {\",\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\n    \"        dir = normalize( dir1 + dir2 );\",\n    \"\",\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\n    \"\",\n    \"    }\",\n    \"\",\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\n    \"    normal.x /= aspect;\",\n    \"    normal *= .5 * w;\",\n    \"\",\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\n    \"    finalPosition.xy += offset.xy;\",\n    \"\",\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\n    \"    gl_Position = finalPosition;\",\n    \"\",\n    \"}\"\n  ];\n\n  var fragmentShaderSource = [\n    \"#extension GL_OES_standard_derivatives : enable\",\n    \"precision mediump float;\",\n    \"\",\n    \"uniform sampler2D map;\",\n    \"uniform float useMap;\",\n    \"uniform float useDash;\",\n    \"uniform vec2 dashArray;\",\n    \"uniform float visibility;\",\n    \"uniform float alphaTest;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    vec4 c = vColor;\",\n    \"\t if( c.a < alphaTest ) discard;\",\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\n    \"\t if( useDash == 1. ){\",\n    \"\t \t \",\n    \"\t }\",\n    \"    gl_FragColor = c;\",\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\n    \"}\"\n  ];\n\n  function check(v, d) {\n    if (v === undefined) return d;\n    return v;\n  }\n\n  THREE.Material.call(this);\n\n  parameters = parameters || {};\n\n  this.lineWidth = check(parameters.lineWidth, 1);\n  this.map = check(parameters.map, null);\n  this.useMap = check(parameters.useMap, 0);\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\n  this.opacity = check(parameters.opacity, 1);\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n  this.near = check(parameters.near, 1);\n  this.far = check(parameters.far, 1);\n  this.dashArray = check(parameters.dashArray, []);\n  this.useDash = this.dashArray !== [] ? 1 : 0;\n  this.visibility = check(parameters.visibility, 1);\n  this.alphaTest = check(parameters.alphaTest, 0);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      lineWidth: { type: \"f\", value: this.lineWidth },\n      map: { type: \"t\", value: this.map },\n      useMap: { type: \"f\", value: this.useMap },\n      color: { type: \"c\", value: this.color },\n      opacity: { type: \"f\", value: this.opacity },\n      resolution: { type: \"v2\", value: this.resolution },\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\n      near: { type: \"f\", value: this.near },\n      far: { type: \"f\", value: this.far },\n      dashArray: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\n      },\n      useDash: { type: \"f\", value: this.useDash },\n      visibility: { type: \"f\", value: this.visibility },\n      alphaTest: { type: \"f\", value: this.alphaTest }\n    },\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\n  });\n\n  delete parameters.lineWidth;\n  delete parameters.map;\n  delete parameters.useMap;\n  delete parameters.color;\n  delete parameters.opacity;\n  delete parameters.resolution;\n  delete parameters.sizeAttenuation;\n  delete parameters.near;\n  delete parameters.far;\n  delete parameters.dashArray;\n  delete parameters.visibility;\n  delete parameters.alphaTest;\n\n  material.type = \"MeshLineMaterial\";\n\n  material.setValues(parameters);\n\n  return material;\n};\n\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\n\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\n  THREE.Material.prototype.copy.call(this, source);\n\n  this.lineWidth = source.lineWidth;\n  this.map = source.map;\n  this.useMap = source.useMap;\n  this.color.copy(source.color);\n  this.opacity = source.opacity;\n  this.resolution.copy(source.resolution);\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.near = source.near;\n  this.far = source.far;\n\n  return this;\n};\n\nexports.MeshLine = THREE.MeshLine;\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.selectNode = function(node) {\n    self.dragging = node;\n    self.selection = [node];\n    node.renderData.isSelected = true;\n    self.updateSelection(self.mouseX, self.mouseY);\n  };\n\n  /**\n   * Deselect nodes in selection list\n   */\n  self.clearSelection = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.selection[i].renderData.isSelected = false;\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = false;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.color)\n        );\n      }\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\n    }\n    self.selection = [];\n  };\n\n  /**\n   *  Update positions of all objects in self.selection\n   *  based on diff between mouse position and self.dragging position\n   */\n  self.updateSelection = function(mouseX, mouseY, selection) {\n    if (self.dragging) {\n      var diffx = mouseX - self.dragging.x;\n      var diffy = mouseY - self.dragging.y;\n    }\n\n    //'selection' only passed if a single node is double clicked\n    let clickedNode = selection;\n    //if not already pinned, then pin the node upon double-click\n    if(clickedNode && !clickedNode.pinnedx) {\n      clickedNode.pinnedx = true;\n      clickedNode.pinnedy = true;\n    } else if (clickedNode && clickedNode.pinnedx) {\n      //if already pinned, then unpin upon double-click\n      clickedNode.pinnedx = false;\n      clickedNode.pinnedy = false;\n    }\n    \n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.dragging) {\n        self.selection[i].x += diffx;\n        self.selection[i].y += diffy;\n        self.selection[i].fx = self.selection[i].x;\n        self.selection[i].fy = self.selection[i].y;\n        //pins multiple nodes when dragging\n        if(!clickedNode) {\n          self.selection[i].pinnedx = true;\n          self.selection[i].pinnedy = true;\n        }\n      }\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = true;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.hcolor)\n        );\n      }\n      self.selection[\n        i\n      ].renderData.textHolder.children[0].element.hideme = false;\n    }\n  };\n\n  /**\n   *  Find any objects within the current box selection and add it to self.selection\n   */\n  self.checkSelection = function(mouseX, mouseY) {\n    if (!self.dragging) {\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\n      if (self.mouseStart.x < self.mouseEnd.x) {\n        var left = self.mouseStart;\n        var right = self.mouseEnd;\n      } else {\n        var left = self.mouseEnd;\n        var right = self.mouseStart;\n      }\n\n      self.graph.forEachNode(function(node) {\n        let npos;\n        if (self.options.layout == \"ngraph\") {\n          npos = self.force.getNodePosition(node.id);\n        } else if (self.options.layout == \"d3\") {\n          npos = node;\n        }\n        if (self.insideBox(left, right, npos.x, npos.y)) {\n          self.selection.push(node);\n          //indicates nodes were in selection box \n          //when mouse is lifted\n          //self.multNodesHighlighted = true;\n        }\n      });\n    }\n  };\n\n  /**\n   *  returns true if pos is in box with top left l and bottom right r\n   */\n  self.insideBox = function(l, r, posx, posy) {\n    return (\n      posx < r.x &&\n      posx > l.x &&\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\n    );\n  };\n};","var Frame = require(\"./src/process\").Frame;\n\nexports.Frame = Frame;\n\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\n\nexports.graph = graph;\n\nif (window) {\n  window.Argo = exports;\n}\n","module.exports = __webpack_public_path__ + \"static/media/argologo.560a589f.png\";","import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const toaster = Toaster.create({\n  position: Position.TOP\n});\n\nexport default toaster;\n","var THREE = require(\"three\");\nvar STATS = require(\"stats.js\");\nwindow.THREE = THREE;\nrequire(\"../include/QuickHull\");\nrequire(\"../include/ConvexGeometry\");\nrequire(\"../include/CSS3DRenderer\");\nvar Edge = require(\"./structure/node\").Edge;\nvar Node = require(\"./structure/node\").Node;\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\nvar d3 = require(\"d3\");\nvar ee = require(\"event-emitter\");\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\n\nexports.default = {\n  THREE: THREE,\n  STATS: STATS, // stats.js panel for showing fps and other stats.\n  STATS_SHOW: false,\n  Edge: Edge,\n  Node: Node,\n  OrbitControls: OrbitControls,\n  d3: d3,\n  ee: ee,\n  NODE_COLOR: 0x0055aa,\n  NODE_HIGHLIGHT: 0x3498db,\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\n  SEARCH_HIGHLIGHT: 0xe67e22,\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\n  NODE_NO_HTEX: true,\n  NODE_NO_TEX: true,\n  NODE_NO_HCOLOR: false,\n  NODE_NO_COLOR: false,\n  NODE_NO_HIGHLIGHT: false,\n  NODE_NEIGHBOR_HIGHLIGHT: true,\n  NODE_SHAPE: \"square\",\n  NODE_HSHAPE: \"square\",\n  NODE_SIZE: 5,\n  HIGHLIGHT_SIZE: 1.0,\n  LAYOUT: \"d3\",\n  LINES: \"notfancy\",\n  MAP: !IS_IFRAME_WIDGET,\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\n  TEXT_SCALE: true,\n  TEXT_SIZE: 0.07,\n  TEXT_X_OFFSET: 0.52,\n  TEXT_Y_OFFSET: 0.35,\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\n  TEXT_OPACITY: \"1\",\n  TEXT_WIREFRAME: false,\n  PIN_COLOR: 0xffffff\n};\n","var def = require(\"./imports\").default;\nconst spawn = require(\"threads\").spawn;\nvar THREE = def.THREE;\nvar STATS = def.STATS;\nvar STATS_SHOW = def.STATS_SHOW;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nvar Frame = function(graph, options) {\n  // Needed to reference \"this\" in functions\n  var self = this;\n\n  // Options\n  this.inGraph = graph;\n  this.options = options || {\n    layout: def.LAYOUT\n  };\n  this.layout_options = this.options.graphLayout || {};\n\n  this.lineObjects = [];\n  this.lineIndices = [];\n  this.MAX_LINES = 100000;\n  this.textureLoader = new THREE.TextureLoader();\n  this.textureLoader.crossOrigin = true;\n  this.oldIntersect = -1;\n  this.selection = [];\n  this.fov = 60;\n  this.near = 1;\n  this.far = 5000;\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\n  this.dragging = null;\n  this.showBox = false;\n  this.renderWidth = 1000;\n  this.renderHeight = 1000;\n  this.maxZoom = 1000;\n  this.paused = false;\n  this.mouseDown = false;\n  this.ee = ee({});\n  this.layoutInit = true;\n  this.labelSize = 6;\n  this.relativeFontSize = 1;\n  this.mapShowing = def.MAP;\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\n  this.darkMode = true;\n  this.lastNode = null;\n  this.rightClickedNode = null;\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\n  this.prevHighlights = [];\n  this.hull = null;\n\n  require(\"./utils/utils\")(this);\n  require(\"./setup\")(this);\n  require(\"./addremove\")(this);\n  require(\"./highlighting\")(this);\n  require(\"./select\")(this);\n  require(\"./mouse\")(this);\n  require(\"./modify\")(this);\n  require(\"./draw\")(this);\n  require(\"./api\")(this);\n  require(\"./update\")(this);\n\n  /**\n   *  Starting point, run once to create scene\n   */\n  let stats = new STATS();\n  this.display = function() {\n    if (STATS_SHOW) {\n      stats.showPanel(0); // show fps panel\n      document.body.appendChild(stats.dom);\n    }\n    this.animate();\n  };\n\n  /**\n   *  Creates loop called on every animation frame\n   */\n  \n  let fps = 30;\n  // let now;\n  // let then = Date.now();\n  // let interval = 1000 / fps;\n  // let delta;\n  this.animate = function() {\n    if (STATS_SHOW) {\n      stats.begin(); // Begin stats.js panel timing\n    }\n    \n    self.controls.update();\n    self.render();\n\n    if (STATS_SHOW) {\n      stats.end(); // End stats.js panel timing\n    }\n    \n    // now = Date.now();\n    // delta = now - then;\n    // if (delta > interval) {\n    //   then = now;\n    //   self.controls.update();\n    //   self.render();\n    // }\n    requestAnimationFrame(self.animate);\n  };\n\n  /**\n   *  Set initial properties\n   */\n  this.init = function(aa = true) {\n    self.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    self.minimapRenderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\n    //self.renderer.setPixelRatio(0.1);\n    self.setDisplayParams();\n    self.setRendererParams();\n\n    self.setupCamera();\n    self.setupMinimap();\n    self.setupGeometry();\n    self.setupSelect();\n\n    // Make sure to clear children before setting up new frame.\n    self.element.innerHTML = \"\";\n    self.element.appendChild(self.renderer.domElement);\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.element.appendChild(self.minimapRenderer.domElement);\n\n    self.setupLayout();\n\n    self.setupGraph();\n\n    window.addEventListener(\n      \"resize\",\n      function(e) {\n        e.preventDefault();\n        self.onWindowResize();\n      },\n      false\n    );\n  };\n\n  /**\n   * Change camera on window resize\n   */\n  self.onWindowResize = function() {\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.minimap.width = 0.2 * self.height;\n    self.minimap.height = 0.2 * self.height;\n    self.aspect = self.width / self.height;\n    self.ccamera.aspect = self.aspect;\n    self.ccamera.updateProjectionMatrix();\n\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer.setSize(self.width, self.height);\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n  };\n\n  /**\n   *  Draws graphics\n   */\n  var stage = 0;\n  var numberOfFrameSinceMiniMapRerender = 1;\n  this.render = function() {\n    self.updateCamera();\n    self.updateNodes();\n    if (stage == 1) {\n      self.updateLabels();\n      self.updateEdges();\n      stage = 0;\n    }\n    stage += 1;\n    numberOfFrameSinceMiniMapRerender += 1;\n    if (self.options.layout == \"d3\") {\n      if (self.layoutInit == true) {\n        var nodes = [];\n        self.graph.forEachNode(function(node) {\n          nodes.push(node);\n        });\n        self.force.nodes(nodes);\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\n        self.force.restart();\n        self.force.stop();\n        if (self.tickToStatic && !self.paused) {\n          // We don't tick and pause for now\n          for (\n            var i = 0,\n              n = Math.ceil(\n                Math.log(self.force.alphaMin()) /\n                  Math.log(1 - self.force.alphaDecay())\n              );\n            i < n;\n            ++i\n          ) {\n            self.force.tick();\n          }\n          //self.pauseLayout();\n        }\n        self.layoutInit = false;\n      }\n    }\n    self.renderer.setViewport(0, 0, self.width, self.height);\n    self.renderer.setScissor(0, 0, self.width, self.height);\n    self.renderer.setScissorTest(true);\n    self.renderer.render(self.scene, self.ccamera);\n    self.cssRenderer.render(self.scene, self.ccamera);\n\n    // Render MiniMap at a lower framerate.\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\n      numberOfFrameSinceMiniMapRerender = 0;\n\n      if (self.mapShowing) {\n        self.minimap.width = 0.2 * self.height;\n        self.minimap.height = 0.2 * self.height;\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissorTest(true);\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\n      }\n    }\n  };\n};\n\nexports.Frame = Frame;\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n *\n */\n\n(function() {\n  var Visible = 0;\n  var Deleted = 1;\n\n  function QuickHull() {\n    this.tolerance = -1;\n\n    this.faces = []; // the generated faces of the convex hull\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  Object.assign(QuickHull.prototype, {\n    setFromPoints: function(points) {\n      if (Array.isArray(points) !== true) {\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\n      }\n\n      if (points.length < 4) {\n        console.error(\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\n        );\n      }\n\n      this.makeEmpty();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n\n      this.compute();\n\n      return this;\n    },\n\n    setFromObject: function(object) {\n      var points = [];\n\n      object.updateMatrixWorld(true);\n\n      object.traverse(function(node) {\n        var i, l, point;\n\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              point = vertices[i].clone();\n              point.applyMatrix4(node.matrixWorld);\n\n              points.push(point);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                point = new THREE.Vector3();\n\n                point\n                  .fromBufferAttribute(attribute, i)\n                  .applyMatrix4(node.matrixWorld);\n\n                points.push(point);\n              }\n            }\n          }\n        }\n      });\n\n      return this.setFromPoints(points);\n    },\n\n    makeEmpty: function() {\n      this.faces = [];\n      this.vertices = [];\n\n      return this;\n    },\n\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n    addVertexToFace: function(vertex, face) {\n      vertex.face = face;\n\n      if (face.outside === null) {\n        this.assigned.append(vertex);\n      } else {\n        this.assigned.insertBefore(face.outside, vertex);\n      }\n\n      face.outside = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n    removeVertexFromFace: function(vertex, face) {\n      if (vertex === face.outside) {\n        // fix face.outside link\n\n        if (vertex.next !== null && vertex.next.face === face) {\n          // face has at least 2 outside vertices, move the 'outside' reference\n\n          face.outside = vertex.next;\n        } else {\n          // vertex was the only outside vertex that face had\n\n          face.outside = null;\n        }\n      }\n\n      this.assigned.remove(vertex);\n\n      return this;\n    },\n\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n    removeAllVerticesFromFace: function(face) {\n      if (face.outside !== null) {\n        // reference to the first and last vertex of this face\n\n        var start = face.outside;\n        var end = face.outside;\n\n        while (end.next !== null && end.next.face === face) {\n          end = end.next;\n        }\n\n        this.assigned.removeSubList(start, end);\n\n        // fix references\n\n        start.prev = end.next = null;\n        face.outside = null;\n\n        return start;\n      }\n    },\n\n    // Removes all the visible vertices that 'face' is able to see\n\n    deleteFaceVertices: function(face, absorbingFace) {\n      var faceVertices = this.removeAllVerticesFromFace(face);\n\n      if (faceVertices !== undefined) {\n        if (absorbingFace === undefined) {\n          // mark the vertices to be reassigned to some other face\n\n          this.unassigned.appendChain(faceVertices);\n        } else {\n          // if there's an absorbing face try to assign as many vertices as possible to it\n\n          var vertex = faceVertices;\n\n          do {\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n            // will be changed by upcoming method calls\n\n            var nextVertex = vertex.next;\n\n            var distance = absorbingFace.distanceToPoint(vertex.point);\n\n            // check if 'vertex' is able to see 'absorbingFace'\n\n            if (distance > this.tolerance) {\n              this.addVertexToFace(vertex, absorbingFace);\n            } else {\n              this.unassigned.append(vertex);\n            }\n\n            // now assign next vertex\n\n            vertex = nextVertex;\n          } while (vertex !== null);\n        }\n      }\n\n      return this;\n    },\n\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n    resolveUnassignedPoints: function(newFaces) {\n      if (this.unassigned.isEmpty() === false) {\n        var vertex = this.unassigned.first();\n\n        do {\n          // buffer 'next' reference, see .deleteFaceVertices()\n\n          var nextVertex = vertex.next;\n\n          var maxDistance = this.tolerance;\n\n          var maxFace = null;\n\n          for (var i = 0; i < newFaces.length; i++) {\n            var face = newFaces[i];\n\n            if (face.mark === Visible) {\n              var distance = face.distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = face;\n              }\n\n              if (maxDistance > 1000 * this.tolerance) break;\n            }\n          }\n\n          // 'maxFace' can be null e.g. if there are identical vertices\n\n          if (maxFace !== null) {\n            this.addVertexToFace(vertex, maxFace);\n          }\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n\n      return this;\n    },\n\n    // Computes the extremes of a simplex which will be the initial hull\n\n    computeExtremes: function() {\n      var min = new THREE.Vector3();\n      var max = new THREE.Vector3();\n\n      var minVertices = [];\n      var maxVertices = [];\n\n      var i, l, j;\n\n      // initially assume that the first vertex is the min/max\n\n      for (i = 0; i < 3; i++) {\n        minVertices[i] = maxVertices[i] = this.vertices[0];\n      }\n\n      min.copy(this.vertices[0].point);\n      max.copy(this.vertices[0].point);\n\n      // compute the min/max vertex on all six directions\n\n      for (i = 0, l = this.vertices.length; i < l; i++) {\n        var vertex = this.vertices[i];\n        var point = vertex.point;\n\n        // update the min coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) < min.getComponent(j)) {\n            min.setComponent(j, point.getComponent(j));\n            minVertices[j] = vertex;\n          }\n        }\n\n        // update the max coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) > max.getComponent(j)) {\n            max.setComponent(j, point.getComponent(j));\n            maxVertices[j] = vertex;\n          }\n        }\n      }\n\n      // use min/max vectors to compute an optimal epsilon\n\n      this.tolerance =\n        3 *\n        Number.EPSILON *\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\n\n      return { min: minVertices, max: maxVertices };\n    },\n\n    // Computes the initial simplex assigning to its faces all the points\n    // that are candidates to form part of the hull\n\n    computeInitialHull: (function() {\n      var line3, plane, closestPoint;\n\n      return function computeInitialHull() {\n        if (line3 === undefined) {\n          line3 = new THREE.Line3();\n          plane = new THREE.Plane();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var vertex,\n          vertices = this.vertices;\n        var extremes = this.computeExtremes();\n        var min = extremes.min;\n        var max = extremes.max;\n\n        var v0, v1, v2, v3;\n        var i, l, j;\n\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n        // (max.x - min.x)\n        // (max.y - min.y)\n        // (max.z - min.z)\n\n        var distance,\n          maxDistance = 0;\n        var index = 0;\n\n        for (i = 0; i < 3; i++) {\n          distance =\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n          }\n        }\n\n        v0 = min[index];\n        v1 = max[index];\n\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n        maxDistance = 0;\n        line3.set(v0.point, v1.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1) {\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\n\n            distance = closestPoint.distanceToSquared(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v2 = vertex;\n            }\n          }\n        }\n\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n        maxDistance = 0;\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v3 = vertex;\n            }\n          }\n        }\n\n        var faces = [];\n\n        if (plane.distanceToPoint(v3.point) < 0) {\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v1, v2),\n            Face.create(v3, v1, v0),\n            Face.create(v3, v2, v1),\n            Face.create(v3, v0, v2)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n          }\n        } else {\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v2, v1),\n            Face.create(v3, v0, v1),\n            Face.create(v3, v1, v2),\n            Face.create(v3, v2, v0)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n\n            // join face[ i ] with face[ i + 1 ]\n\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n          }\n        }\n\n        // the initial hull is the tetrahedron\n\n        for (i = 0; i < 4; i++) {\n          this.faces.push(faces[i]);\n        }\n\n        // initial assignment of vertices to the faces of the tetrahedron\n\n        for (i = 0, l = vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (\n            vertex !== v0 &&\n            vertex !== v1 &&\n            vertex !== v2 &&\n            vertex !== v3\n          ) {\n            maxDistance = this.tolerance;\n            var maxFace = null;\n\n            for (j = 0; j < 4; j++) {\n              distance = this.faces[j].distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = this.faces[j];\n              }\n            }\n\n            if (maxFace !== null) {\n              this.addVertexToFace(vertex, maxFace);\n            }\n          }\n        }\n\n        return this;\n      };\n    })(),\n\n    // Removes inactive faces\n\n    reindexFaces: function() {\n      var activeFaces = [];\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n\n        if (face.mark === Visible) {\n          activeFaces.push(face);\n        }\n      }\n\n      this.faces = activeFaces;\n\n      return this;\n    },\n\n    // Finds the next vertex to create faces with the current hull\n\n    nextVertexToAdd: function() {\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n      if (this.assigned.isEmpty() === false) {\n        var eyeVertex,\n          maxDistance = 0;\n\n        // grap the first available face and start with the first visible vertex of that face\n\n        var eyeFace = this.assigned.first().face;\n        var vertex = eyeFace.outside;\n\n        // now calculate the farthest vertex that face can see\n\n        do {\n          var distance = eyeFace.distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            eyeVertex = vertex;\n          }\n\n          vertex = vertex.next;\n        } while (vertex !== null && vertex.face === eyeFace);\n\n        return eyeVertex;\n      }\n    },\n\n    // Computes a chain of half edges in CCW order called the 'horizon'.\n    // For an edge to be part of the horizon it must join a face that can see\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\n      // moves face's vertices to the 'unassigned' vertex list\n\n      this.deleteFaceVertices(face);\n\n      face.mark = Deleted;\n\n      var edge;\n\n      if (crossEdge === null) {\n        edge = crossEdge = face.getEdge(0);\n      } else {\n        // start from the next edge since 'crossEdge' was already analyzed\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n        edge = crossEdge.next;\n      }\n\n      do {\n        var twinEdge = edge.twin;\n        var oppositeFace = twinEdge.face;\n\n        if (oppositeFace.mark === Visible) {\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n            // the opposite face can see the vertex, so proceed with next edge\n\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n          } else {\n            // the opposite face can't see the vertex, so this edge is part of the horizon\n\n            horizon.push(edge);\n          }\n        }\n\n        edge = edge.next;\n      } while (edge !== crossEdge);\n\n      return this;\n    },\n\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n\n      this.faces.push(face);\n\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n      face.getEdge(-1).setTwin(horizonEdge.twin);\n\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n    },\n\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n    //  horizon opposite face and the face on the left/right\n\n    addNewFaces: function(eyeVertex, horizon) {\n      this.newFaces = [];\n\n      var firstSideEdge = null;\n      var previousSideEdge = null;\n\n      for (var i = 0; i < horizon.length; i++) {\n        var horizonEdge = horizon[i];\n\n        // returns the right side edge\n\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n        if (firstSideEdge === null) {\n          firstSideEdge = sideEdge;\n        } else {\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n          sideEdge.next.setTwin(previousSideEdge);\n        }\n\n        this.newFaces.push(sideEdge.face);\n        previousSideEdge = sideEdge;\n      }\n\n      // perform final join of new faces\n\n      firstSideEdge.next.setTwin(previousSideEdge);\n\n      return this;\n    },\n\n    // Adds a vertex to the hull\n\n    addVertexToHull: function(eyeVertex) {\n      var horizon = [];\n      var i, face;\n\n      this.unassigned.clear();\n\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n\n      this.addNewFaces(eyeVertex, horizon);\n\n      // reassign 'unassigned' vertices to the new faces\n\n      this.resolveUnassignedPoints(this.newFaces);\n\n      return this;\n    },\n\n    cleanup: function() {\n      this.assigned.clear();\n      this.unassigned.clear();\n      this.newFaces = [];\n\n      return this;\n    },\n\n    compute: function() {\n      var vertex;\n\n      this.computeInitialHull();\n\n      // add all available vertices gradually to the hull\n\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\n        this.addVertexToHull(vertex);\n      }\n\n      this.reindexFaces();\n\n      this.cleanup();\n\n      return this;\n    }\n  });\n\n  //\n\n  function Face() {\n    this.normal = new THREE.Vector3();\n    this.midpoint = new THREE.Vector3();\n    this.area = 0;\n\n    this.constant = 0; // signed distance from face to the origin\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  Object.assign(Face, {\n    create: function(a, b, c) {\n      var face = new Face();\n\n      var e0 = new HalfEdge(a, face);\n      var e1 = new HalfEdge(b, face);\n      var e2 = new HalfEdge(c, face);\n\n      // join edges\n\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n\n      // main half edge reference\n\n      face.edge = e0;\n\n      return face.compute();\n    }\n  });\n\n  Object.assign(Face.prototype, {\n    getEdge: function(i) {\n      var edge = this.edge;\n\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n\n      return edge;\n    },\n\n    compute: (function() {\n      var triangle;\n\n      return function compute() {\n        if (triangle === undefined) triangle = new THREE.Triangle();\n\n        var a = this.edge.tail();\n        var b = this.edge.head();\n        var c = this.edge.next.head();\n\n        triangle.set(a.point, b.point, c.point);\n\n        triangle.normal(this.normal);\n        triangle.midpoint(this.midpoint);\n        this.area = triangle.area();\n\n        this.constant = this.normal.dot(this.midpoint);\n\n        return this;\n      };\n    })(),\n\n    distanceToPoint: function(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  });\n\n  // Entity for a Doubly-Connected Edge List (DCEL).\n\n  function HalfEdge(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  Object.assign(HalfEdge.prototype, {\n    head: function() {\n      return this.vertex;\n    },\n\n    tail: function() {\n      return this.prev ? this.prev.vertex : null;\n    },\n\n    length: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceTo(head.point);\n      }\n\n      return -1;\n    },\n\n    lengthSquared: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceToSquared(head.point);\n      }\n\n      return -1;\n    },\n\n    setTwin: function(edge) {\n      this.twin = edge;\n      edge.twin = this;\n\n      return this;\n    }\n  });\n\n  // A vertex as a double linked list node.\n\n  function VertexNode(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n  // A double linked list that contains vertex nodes.\n\n  function VertexList() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  Object.assign(VertexList.prototype, {\n    first: function() {\n      return this.head;\n    },\n\n    last: function() {\n      return this.tail;\n    },\n\n    clear: function() {\n      this.head = this.tail = null;\n\n      return this;\n    },\n\n    // Inserts a vertex before the target vertex\n\n    insertBefore: function(target, vertex) {\n      vertex.prev = target.prev;\n      vertex.next = target;\n\n      if (vertex.prev === null) {\n        this.head = vertex;\n      } else {\n        vertex.prev.next = vertex;\n      }\n\n      target.prev = vertex;\n\n      return this;\n    },\n\n    // Inserts a vertex after the target vertex\n\n    insertAfter: function(target, vertex) {\n      vertex.prev = target;\n      vertex.next = target.next;\n\n      if (vertex.next === null) {\n        this.tail = vertex;\n      } else {\n        vertex.next.prev = vertex;\n      }\n\n      target.next = vertex;\n\n      return this;\n    },\n\n    // Appends a vertex to the end of the linked list\n\n    append: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n      vertex.next = null; // the tail has no subsequent vertex\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Appends a chain of vertices where 'vertex' is the head.\n\n    appendChain: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n\n      // ensure that the 'tail' reference points to the last vertex of the chain\n\n      while (vertex.next !== null) {\n        vertex = vertex.next;\n      }\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the linked list\n\n    remove: function(vertex) {\n      if (vertex.prev === null) {\n        this.head = vertex.next;\n      } else {\n        vertex.prev.next = vertex.next;\n      }\n\n      if (vertex.next === null) {\n        this.tail = vertex.prev;\n      } else {\n        vertex.next.prev = vertex.prev;\n      }\n\n      return this;\n    },\n\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n    removeSubList: function(a, b) {\n      if (a.prev === null) {\n        this.head = b.next;\n      } else {\n        a.prev.next = b.next;\n      }\n\n      if (b.next === null) {\n        this.tail = a.prev;\n      } else {\n        b.next.prev = a.prev;\n      }\n\n      return this;\n    },\n\n    isEmpty: function() {\n      return this.head === null;\n    }\n  });\n\n  // export\n\n  THREE.QuickHull = QuickHull;\n})();\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n(function() {\n  // ConvexGeometry\n\n  function ConvexGeometry(points) {\n    THREE.Geometry.call(this);\n\n    this.type = \"ConvexGeometry\";\n\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\n    this.mergeVertices();\n  }\n\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\n\n  // ConvexBufferGeometry\n\n  function ConvexBufferGeometry(points) {\n    THREE.BufferGeometry.call(this);\n\n    this.type = \"ConvexBufferGeometry\";\n\n    // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    // execute QuickHull\n\n    if (THREE.QuickHull === undefined) {\n      console.error(\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\n      );\n    }\n\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\n\n    // generate vertices and normals\n\n    var faces = quickHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    // build geometry\n\n    this.addAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\n  }\n\n  ConvexBufferGeometry.prototype = Object.create(\n    THREE.BufferGeometry.prototype\n  );\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\n  // export\n\n  THREE.ConvexGeometry = ConvexGeometry;\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\n})();\n","/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = require(\"three\");\n\nTHREE.CSS3DObject = function(element) {\n  THREE.Object3D.call(this);\n\n  this.element = element;\n  this.element.style.position = \"absolute\";\n\n  this.addEventListener(\"removed\", function() {\n    if (this.element.parentNode !== null) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  });\n};\n\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\n\nTHREE.CSS3DSprite = function(element) {\n  THREE.CSS3DObject.call(this, element);\n};\n\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\n\n//\n\nTHREE.CSS3DRenderer = function() {\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\n\n  var _width, _height;\n\n  var matrix = new THREE.Matrix4();\n\n  var cache = {\n    camera: { fov: 0, style: \"\" },\n    objects: {}\n  };\n\n  var domElement = document.createElement(\"div\");\n  domElement.style.overflow = \"hidden\";\n\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\n  domElement.style.MozTransformStyle = \"preserve-3d\";\n  domElement.style.oTransformStyle = \"preserve-3d\";\n  domElement.style.transformStyle = \"preserve-3d\";\n\n  this.domElement = domElement;\n\n  var cameraElement = document.createElement(\"div\");\n\n  cameraElement.style.position = \"absolute\";\n  cameraElement.style.left = \"50%\";\n  cameraElement.style.top = \"50%\";\n\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\n  cameraElement.style.transformStyle = \"preserve-3d\";\n\n  domElement.appendChild(cameraElement);\n\n  this.setClearColor = function() {};\n\n  // Added by Argo-lite, for optimization\n  this.isPaused = false;\n\n  this.getSize = function() {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function(width, height) {\n    _width = width;\n    _height = height;\n\n    domElement.style.width = width + \"px\";\n    domElement.style.height = height + \"px\";\n  };\n\n  function epsilon(value) {\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\n  }\n\n  function getCameraCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(-elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(elements[6]) +\n      \",\" +\n      epsilon(elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(-elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(-elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function getObjectCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(-elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(-elements[6]) +\n      \",\" +\n      epsilon(-elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function renderObject(object, camera) {\n    if (object instanceof THREE.CSS3DObject) {\n      var style;\n\n      if (object instanceof THREE.CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse);\n        matrix.transpose();\n        matrix.copyPosition(object.matrixWorld);\n        matrix.scale(object.scale);\n\n        matrix.elements[3] = 0;\n        matrix.elements[7] = 0;\n        matrix.elements[11] = 0;\n        matrix.elements[15] = 1;\n\n        style = getObjectCSSMatrix(matrix);\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld);\n      }\n\n      var element = object.element;\n      var cachedStyle = cache.objects[object.id];\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style;\n        element.style.MozTransform = style;\n        element.style.oTransform = style;\n        element.style.transform = style;\n\n        cache.objects[object.id] = style;\n      }\n\n      if (element.parentNode !== cameraElement) {\n        cameraElement.appendChild(element);\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], camera);\n    }\n  }\n\n  this.render = function(scene, camera) {\n    if (this.isPaused) {\n      return;\n    }\n    var fov =\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\n      _height;\n\n    if (cache.camera.fov !== fov) {\n      domElement.style.WebkitPerspective = fov + \"px\";\n      domElement.style.MozPerspective = fov + \"px\";\n      domElement.style.oPerspective = fov + \"px\";\n      domElement.style.perspective = fov + \"px\";\n\n      cache.camera.fov = fov;\n    }\n\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    var style =\n      \"translateZ(\" +\n      fov +\n      \"px)\" +\n      getCameraCSSMatrix(camera.matrixWorldInverse);\n\n    if (cache.camera.style !== style) {\n      cameraElement.style.WebkitTransform = style;\n      cameraElement.style.MozTransform = style;\n      cameraElement.style.oTransform = style;\n      cameraElement.style.transform = style;\n\n      cache.camera.style = style;\n    }\n\n    renderObject(scene, camera);\n  };\n};\n","module.exports = function(THREE) {\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n\n  // This set of controls performs orbiting, dollying (zooming), and panning.\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls(object, domElement) {\n    this.object = object;\n\n    this.domElement = domElement !== undefined ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // for space panning\n    this.spacePan = false;\n    this.bothPan = false;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function() {\n      return spherical.theta;\n    };\n\n    this.reset = function() {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function() {\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors(\n        object.up,\n        new THREE.Vector3(0, 1, 0)\n      );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function update() {\n        var position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(\n          scope.minAzimuthAngle,\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n        } else {\n          sphericalDelta.set(0, 0, 0);\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function() {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      window.removeEventListener(\"keydown\", onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function() {\n      var v = new THREE.Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    var panUp = (function() {\n      var v = new THREE.Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function() {\n      var offset = new THREE.Vector3();\n\n      return function pan(deltaX, deltaY) {\n        var element =\n          scope.domElement === document\n            ? scope.domElement.body\n            : scope.domElement;\n\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(\n            ((scope.object.fov / 2) * Math.PI) / 180.0\n          );\n\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          );\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    // Expose panning for external usage\n    this.pan = pan;\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      //console.log( 'handleMouseDownDolly' );\n\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      //console.log( 'handleMouseMoveRotate' );\n\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      //console.log( 'handleMouseMoveDolly' );\n\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyIn(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyOut(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(event) {\n      //console.log( 'handleMouseUp' );\n    }\n\n    function handleMouseWheel(event) {\n      //console.log( 'handleMouseWheel' );\n\n      if (event.deltaY < 0) {\n        dollyOut(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyIn(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyUp(event) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = false;\n            state = STATE.NONE;\n          }\n          break;\n      }\n    }\n\n    function handleKeyDown(event) {\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = true;\n            state = STATE.PAN;\n          }\n          break;\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchStartDolly(event) {\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartPan(event) {\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchMoveRotate(event) {\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMoveDolly(event) {\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMovePan(event) {\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleTouchEnd(event) {\n      //console.log( 'handleTouchEnd' );\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (!scope.spacePan || scope.bothPan) {\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        }\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", onMouseMove, false);\n        document.addEventListener(\"mouseup\", onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (scope.spacePan == true) {\n          if (scope.spacePanStart == true) {\n            handleMouseDownPan(event);\n            scope.spacePanStart = false;\n          }\n        }\n\n        handleMouseMovePan(event);\n      }\n    }\n\n    function onMouseUp(event) {\n      if (scope.enabled === false) return;\n\n      handleMouseUp(event);\n\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n\n      handleKeyDown(event);\n    }\n\n    function onKeyUp(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      handleKeyUp(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    window.addEventListener(\"keydown\", onKeyDown, false);\n    window.addEventListener(\"keyup\", onKeyUp, false);\n\n    // force an update at start\n\n    this.update();\n  }\n\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n\n  Object.defineProperties(OrbitControls.prototype, {\n    center: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .center has been renamed to .target\"\n        );\n        return this.target;\n      }\n    },\n\n    // backward compatibility\n\n    noZoom: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        return !this.enableZoom;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        this.enableZoom = !value;\n      }\n    },\n\n    noRotate: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        return !this.enableRotate;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        this.enableRotate = !value;\n      }\n    },\n\n    noPan: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        return !this.enablePan;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        this.enablePan = !value;\n      }\n    },\n\n    noKeys: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        return !this.enableKeys;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        this.enableKeys = !value;\n      }\n    },\n\n    staticMoving: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        return !this.enableDamping;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        this.enableDamping = !value;\n      }\n    },\n\n    dynamicDampingFactor: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        return this.dampingFactor;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        this.dampingFactor = value;\n      }\n    }\n  });\n\n  return OrbitControls;\n};\n","var def = require(\"../imports\").default;\nvar appState = require(\"../../../stores\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Calculates coordinates of mouse on canvas adjusted for padding\n   * @param {*} event\n   * @param {*} currentElement\n   */\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\n    var totalOffsetX = 0;\n    var totalOffsetY = 0;\n    var canvasX = 0;\n    var canvasY = 0;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while ((currentElement = currentElement.offsetParent));\n\n    canvasX = pageX - totalOffsetX;\n    canvasY = pageY - totalOffsetY;\n\n    return { x: canvasX, y: canvasY };\n  };\n\n  /**\n   * Add metadata to node\n   * @param {*} node\n   */\n  self.prepNode = function(node) {\n    let nodeToAdd = node;\n    if (!node.data) {\n      node.data = {};\n    }\n\n    let hexToRGB = (hex) => {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \n      new THREE.Color(appState.graph.edges.color)\n      : null;\n  }\n    nodeToAdd.renderData = {\n      label: node.data.label || \"No Label\",\n      color: node.data.color || def.NODE_COLOR,\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\n      shape: node.data.shape || def.NODE_SHAPE,\n      linecolor:  hexToRGB(appState.graph.edges.color),\n      numYeast: Math.ceil(Math.random() * 8),\n      size: node.data.size,\n      tsize: node.data.tsize || def.TEXT_SIZE,\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    return nodeToAdd;\n  };\n\n  /**\n   * Creates a generic rectangle shape to use for selection and boundaries\n   */\n  self.make1x1Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, 0);\n    rectShape.lineTo(0, 0);\n    rectShape.lineTo(0, 1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   * Creates a centered 2x2 Rectangle\n   */\n  self.make2x2Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(-1, -1);\n    rectShape.lineTo(-1, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, -1);\n    rectShape.lineTo(-1, -1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   *  find radius of circle given the volume\n   * @param {*} volume\n   */\n  self.volToRadius = function(volume) {\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Creates or converts ngraph or d3 graph\n   */\n  self.setupGraph = function() {\n    var createNGraph = require(\"ngraph.graph\");\n    self.graph = createNGraph();\n    if (self.inGraph) {\n      self.updateGraph(self.inGraph);\n    }\n  };\n\n  /**\n   *  Create layout using d3\n   */\n  self.setupLayout = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.setupNgraphLayout();\n    } else if (self.options.layout == \"d3\") {\n      self.setupD3Layout();\n    }\n  };\n\n  /**\n   * Set graph layout to ngraph\n   */\n  self.setupNgraphLayout = function() {\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\n  };\n\n  /**\n   * Set graph layout to D3 Force Directed and set decay parameters\n   */\n  self.setupD3Layout = function() {\n    self.force = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody().strength(-1))\n      .force(\"link\", d3.forceLink())\n      .force(\"y\", d3.forceY(0).strength(0.001))\n      .force(\"x\", d3.forceX(0).strength(0.001))\n      .stop();\n\n    // set alpha decay to be lower than the default 0.0228\n    // so force layout does not prematurely stop\n    self.force.alphaDecay(0.005);\n\n    // set velocity decay to be lower than the default 0.4\n    // so nodes move to their final locations\n    self.force.velocityDecay(0.1);\n  };\n\n  self.setDisplayParams = function() {\n    self.element = document.getElementById(\"graph-container\");\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.aspect = self.width / self.height;\n    self.resolution = new THREE.Vector2(self.width, self.height);\n  };\n\n  self.setRendererParams = function() {\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer = new THREE.CSS3DRenderer();\n    self.cssRenderer.setSize(self.width, self.height);\n    self.cssRenderer.domElement.style.position = \"absolute\";\n    self.cssRenderer.domElement.style.top = 0;\n    self.minimapRenderer.domElement.style.position = \"absolute\";\n    self.minimapRenderer.domElement.style.bottom = 0;\n    self.minimapRenderer.domElement.style.left = 0;\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n    self.minimapRenderer.zIndex = 1000;\n    self.renderer.setPixelRatio(window.devicePixelRatio);\n  };\n\n  /**\n   *  Create initial camera and parameters\n   */\n  self.setupCamera = function() {\n    self.ccamera = new THREE.PerspectiveCamera(\n      self.fov,\n      self.width / self.height,\n      self.near,\n      self.far\n    );\n    self.ccamera.position.z = 200;\n    var controls = new OrbitControls(self.ccamera, self.element);\n    controls.spacePan = true; // Space bar panning\n    controls.bothPan = true; // Space bar and right click panning\n    controls.minDistance = 10;\n    controls.maxDistance = self.renderWidth * 2;\n    controls.target.set(0, 0, 0);\n    controls.enableRotate = false;\n    self.controls = controls;\n  };\n\n  /**\n   *  Create minimap\n   */\n  self.setupMinimap = function() {\n    self.minimap = {};\n    self.minimap.camera = new THREE.PerspectiveCamera(\n      self.fov,\n      1,\n      self.near,\n      self.far\n    );\n    self.minimap.camera.position.z = self.renderWidth * 2;\n\n    (self.oldCoords = {\n      x: null,\n      y: null,\n      z: null\n    }),\n      /**\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\n       * @param coordX mouse position on screen returned by relMouseCoords\n       * @param coordY mouse position on screen returned by relMouseCoords\n       */\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\n        // ensures that the camera position is updated from the last pan.\n        if (\n          self.ccamera.position.x == self.oldCoords.x &&\n          self.ccamera.position.y == self.oldCoords.y &&\n          self.ccamera.position.z == self.oldCoords.z\n        ) {\n          return;\n        }\n\n        self.oldCoords.x = self.ccamera.position.x;\n        self.oldCoords.y = self.ccamera.position.y;\n        self.oldCoords.z = self.ccamera.position.z;\n\n        // 850 is an approximation\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\n\n        self.controls.pan(\n          ((coordX / self.minimap.width) * 4000 -\n            2000 -\n            self.ccamera.position.x) *\n            -coefficient,\n          (((self.height - coordY) / self.minimap.height) * 4000 -\n            2000 -\n            self.ccamera.position.y) *\n            coefficient\n        );\n      });\n  };\n\n  /**\n   *  Create initial scene geometry and attributes\n   */\n  self.setupGeometry = function() {\n    self.scene = new THREE.Scene();\n\n    self.points = new THREE.BufferGeometry();\n    self.nodes = new THREE.Group();\n    self.scene.add(self.nodes);\n\n    if (def.LINES == \"fancy\") {\n      self.setupFancyEdges();\n    } else {\n      self.setUpSimpleEdges();\n    }\n\n    var rect = self.make1x1Rect();\n\n    self.setupSelectionBox(rect);\n    self.setupBoundaries(rect);\n    self.setupViewPort(rect);\n  };\n\n  /**\n   * Setup data structures for fancy edges\n   */\n  self.setupFancyEdges = function() {\n    self.edges = [];\n    self.edgeCount = 0;\n  };\n\n  /**\n   * Sets up data structures for simple edges\n   */\n  self.setUpSimpleEdges = function() {\n    self.edges = new THREE.BufferGeometry();\n    var material = new THREE.LineBasicMaterial({\n      linewidth: 2,\n      color: 0xffffff,\n      vertexColors: THREE.VertexColors,\n      shading: THREE.FlatShading\n    });\n    self.line = new THREE.LineSegments(self.edges, material);\n    self.line.frustumCulled = false;\n    self.scene.add(self.line);\n\n    var positions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var colors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.edges.addAttribute(\"position\", positions);\n    self.edges.addAttribute(\"color\", colors);\n\n    /**Adding triangles for directed edges update*/\n    self.directedArrows = new THREE.BufferGeometry();\n    var arrowMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n    });\n    self.arrow = new THREE.Mesh(self.directedArrows, arrowMaterial);\n    self.arrow.frustumCulled = false;\n    self.scene.add(self.arrow)\n    var arrowPositions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var arrowColors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.directedArrows.addAttribute(\"position\", arrowPositions);\n    self.directedArrows.addAttribute(\"color\", arrowColors);\n\n\n    self.drawCount = 0;\n  };\n\n  /**\n   * Adds box to screen that is displayed when selecting groups of nodes\n   */\n  self.setupSelectionBox = function(rect) {\n    self.selectBox = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\n    );\n    self.selectBox.visible = false;\n    self.scene.add(self.selectBox);\n  };\n\n  /**\n   * Sets boundaries for max edges of graph\n   */\n  self.setupBoundaries = function(rect) {\n    self.boundaries = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\n    ); \n    self.scene.add(self.boundaries);\n    self.setBoundarySize(self.renderWidth * 2);\n  };\n\n  /**\n   * Sets viewport to match size of display\n   */\n  self.setupViewPort = function(rect) {\n    self.viewPort = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\n    );\n    self.scene.add(self.viewPort);\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   *  Creates listeners and events for selecting nodes\n   */\n  self.setupSelect = function() {\n    self.points.addAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\n    );\n    self.points.computeBoundingSphere();\n    self.nodeCount = 0;\n    var mouseHandler = function(callback) {\n      return function(event) {\n        event.preventDefault();\n        let pageX, pageY;\n        if (event.touches && event.touches.length > 0) {\n          // for touch events\n          pageX = event.touches.item(0).pageX;\n          pageY = event.touches.item(0).pageY;\n        } else {\n          pageX = event.pageX;\n          pageY = event.pageY;\n        }\n        \n        var coords = self.relMouseCoords(pageX, pageY, this);\n        var mouseX = (coords.x / self.width) * 2 - 1;\n        var mouseY = 1 - (coords.y / self.height) * 2;\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\n        mousePosition.unproject(self.ccamera);\n        var dir = mousePosition.sub(self.ccamera.position).clone();\n        mousePosition.normalize();\n        // Determine whether mouse is on minimap\n        self.isMouseCoordinatesOnMinimap =\n          coords.x <= self.minimap.width &&\n          self.height - coords.y <= self.minimap.height;\n        if (self.isMouseCoordinatesOnMinimap) {\n          self.minimap.mouseX = coords.x;\n          self.minimap.mouseY = coords.y;\n        }\n\n        // Determine intersects\n        var raycaster = new THREE.Raycaster(\n          self.ccamera.position,\n          mousePosition\n        );\n\n        // Find real location of mouse\n        var distance = -self.ccamera.position.z / dir.z;\n        var pos = self.ccamera.position\n          .clone()\n          .add(dir.multiplyScalar(distance));\n\n        if (callback == self.onRightClick && event.which != 3) {\n          return;\n        }\n\n        if (\n          callback == self.onRightClick &&\n          event.target.getAttribute(\"contenteditable\")\n        ) {\n          event.target.focus();\n        } else {\n          event.preventDefault();\n          if (callback == self.onRightClick) {\n            self.onRightClickCoords(event);\n          }\n          self.callMouseHandler(event, raycaster, pos, callback);\n        }\n      };\n    };\n\n    //Add listeners to web page\n    self.setupMouseHandlers(mouseHandler);\n  };\n\n  /**\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\n   */\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\n    var intersects = raycaster.intersectObjects(self.nodes.children);\n    if (intersects.length) {\n      // If a node has been clicked\n      var nodeIndex = intersects[0].object.index;\n      self.oldIntersect = nodeIndex;\n      callback(\n        self.graph.getNode(nodeIndex),\n        pos.x,\n        pos.y,\n        event.button,\n        event.ctrlKey\n      );\n    } else {\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\n    }\n  };\n\n  /**\n   * Add Mouse Event Listeners to page\n   */\n  self.setupMouseHandlers = function(mouseHandler) {\n    self.element.addEventListener(\n      \"mousemove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"mousedown\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onRightClick),\n      false\n    );\n    self.element.addEventListener(\n      \"touchstart\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"touchmove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"touchend\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"touchcancel\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.addNode = function(node) {\n    self.graph.addNode(node.id, node.data);\n    var graphNode = self.graph.getNode(node.id);\n    graphNode.x = node.x;\n    graphNode.y = node.y;\n    graphNode.fx = node.fx;\n    graphNode.fy = node.fy;\n    graphNode.pinnedx = node.fx != undefined;\n    graphNode.pinnedy = node.fy != undefined;\n    self.prepNode(graphNode);\n    self.drawNode(graphNode);\n    graphNode.links = [];\n    self.layoutInit = true;\n    return graphNode;\n  };\n\n  self.removeNode = function(node) {\n    if (!node || !node.id) {\n      return;\n    }\n    self.removeGraphEdges(node);\n    self.undrawEdges(node);\n    self.nodes.remove(node.renderData.draw_object);\n    self.graph.removeNode(node.id);\n    self.undrawNode(node);\n    self.nodeCount -= 1;\n  };\n\n  self.removeGraphEdges = function(node) {\n    var nodeLinks = self.graph.getLinks(node.id);\n    if (nodeLinks) {\n      nodeLinks.forEach(function(edge) {\n        self.graph.removeLink(edge);\n      });\n    }\n  };\n\n  self.undrawNode = function(node) {\n    var nodes = self.force.nodes();\n    if (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id == node.id) {\n          self.scene.remove(nodes[i].renderData.draw_object);\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\n          nodes.splice(i, 1);\n        }\n      }\n    }\n  };\n\n  self.undrawEdges = function(node) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    var killed = 0;\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\n      if (\n        self.lineIndices[i - killed].source.id == node.id ||\n        self.lineIndices[i - killed].target.id == node.id\n      ) {\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\n          var k = j + 1;\n          if (k == self.lineIndices.length) {\n            positions[j * 6] = 0;\n            positions[j * 6 + 1] = 0;\n            positions[j * 6 + 3] = 0;\n            positions[j * 6 + 4] = 0;\n            colors[j * 6] = 255;\n            colors[j * 6 + 1] = 160;\n            colors[j * 6 + 2] = 80;\n            colors[j * 6 + 3] = 255;\n            colors[j * 6 + 4] = 160;\n            colors[j * 6 + 5] = 80;\n          } else {\n            self.lineIndices[j] = self.lineIndices[k];\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\n            positions[j * 6] = positions[k * 6];\n            positions[j * 6 + 1] = positions[k * 6 + 1];\n            positions[j * 6 + 3] = positions[k * 6 + 3];\n            positions[j * 6 + 4] = positions[k * 6 + 4];\n            colors[j * 6] = colors[k * 6];\n            colors[j * 6 + 1] = colors[k * 6 + 1];\n            colors[j * 6 + 2] = colors[k * 6 + 2];\n            colors[j * 6 + 3] = colors[k * 6 + 3];\n            colors[j * 6 + 4] = colors[k * 6 + 4];\n            colors[j * 6 + 5] = colors[k * 6 + 5];\n          }\n        }\n        self.lineIndices.pop();\n        self.lineObjects.pop();\n        self.lineObjects.pop();\n        self.drawCount -= 2;\n        killed += 1;\n      }\n    }\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\n  };\n\n  self.getNode = function(node_id) {\n    return self.graph.getNode(node_id);\n  };\n\n  self.addEdge = function(source, target, visible = true) {\n    self.graph.addLink(source.id, target.id);\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Change color of node edges\n   */\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\n    if (toggle) {\n      node.renderData.draw_object.children[0].material.color.setHex(color);\n      node.renderData.draw_object.children[0].visible = true;\n    } else {\n      node.renderData.draw_object.children[0].material.color.set(\n        node.renderData.hcolor\n      );\n      node.renderData.draw_object.children[0].visible = false;\n    }\n  };\n\n  /**\n   *  Highlight edges from and to a node and hide others\n   */\n  self.highlightEdges = function(node, toggle) {\n    const froms = [];\n    const tos = [];\n    for (var i = 0; i < self.selection.length; i++) {\n      for (var j = 0; j < self.selection[i].links.length; j++) {\n        froms.push(self.selection[i].links[j].fromId);\n        tos.push(self.selection[i].links[j].toId);\n      }\n    }\n    if (toggle) {\n      for (var i = 0; i < node.links.length; i++) {\n        froms.push(node.links[i].fromId);\n        tos.push(node.links[i].toId);\n      }\n      self.highlightNeighbors(node, froms, tos);\n    } else {\n      self.highlightNeighbors(node, froms, tos);\n    }\n  };\n\n  /**\n   * Highlight adjacent nodes\n   * \n   * Also highlights edges.\n   */\n  self.highlightNeighbors = function(node, froms, tos) {\n    self.graph.forEachNode(n => {\n      if (self.selection.indexOf(n) != -1 || n == node) {\n        // If the node is selected or the node is the node to be highlighted\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, true);\n        for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\n        }\n      } else if (\n        self.doHighlightNeighbors &&\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\n      ) {\n        // If the node is not selected or highlighted and\n        // if the node is present in either froms or tos arrays\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, false);\n      } else if (\n        !self.prevHighlights ||\n        self.prevHighlights.indexOf(n.id) == -1\n      ) {\n        self.colorNodeOpacity(n, 0.5);\n        self.colorNodeEdge(n, false);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      }\n    });\n  };\n\n  /**\n   *  Change color of node edges\n   */\n  self.colorNodeEdge = function(node, isHighlighted) {\n    let red = new THREE.Color(appState.graph.edges.color).r;\n    let blue = new THREE.Color(appState.graph.edges.color).g;\n    let green = new THREE.Color(appState.graph.edges.color).b;\n    if(isHighlighted) {\n      node.renderData.linecolor.r = red;\n      node.renderData.linecolor.g = blue;\n      node.renderData.linecolor.b = green;\n      // console.log(self.arrow.mater);\n      self.arrow.material.color.setRGB(red, blue, green);\n    } else {\n      node.renderData.linecolor.r =  self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.g = self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.b = self.darkMode ? 0.25 : .75;\n      // self.arrow.material.color.setRGB(self.darkMode ? 0.25 : .75, self.darkMode ? 0.25 : .75, self.darkMode ? 0.25 : .75);\n    }\n    \n  };\n\n  /**\n   *  Change node opacity\n   */\n  self.colorNodeOpacity = function(node, op) {\n    node.renderData.draw_object.material.opacity = op;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\nconst { default: appState } = require(\"../../stores\");\n\nmodule.exports = function (self) {\n  /**\n   * Mouse move event that selections nodes in selection box\n   */\n  self.onMouseMove = function (selection, mouseX, mouseY, button, ctrl) {\n\n\n    // check if left button is not down\n    self.mouseX = mouseX;\n    self.mouseY = mouseY;\n    if (self.leftMouseDown && self.mouseDown) {\n      // left-clicked empty space (i.e., not clicking a node)\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\n        self.clearSelection();\n      }\n\n      if (!self.dragging) {\n        // add nodes enclosed by selection box into node selection\n        self.checkSelection(mouseX, mouseY);\n      }\n    }\n\n\n    if (self.selection.length > 0) {\n      // reactivate (in D3's terminology: reheat) the force layout\n      if (self.dragging) {\n        self.force.alpha(1);\n      }\n      // update position of nodes in selection\n      self.updateSelection(mouseX, mouseY);\n    }\n\n    if (!self.mouseDown) {\n      self.onHover(selection);\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n    } else {\n      // if mouse is in minimap, do nothing else\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n        self.minimap.panToMousePosition(\n          self.minimap.mouseX,\n          self.minimap.mouseY\n        );\n        return;\n      }\n\n\n\n      // update selection box size/position\n      if (self.leftMouseDown && !self.dragging) {\n        if (self.showBox) {\n          self.selectBox.visible = true;\n          self.showBox = false;\n        }\n        self.selectBox.position.x = mouseX;\n        self.selectBox.position.y = mouseY;\n        var diffx = self.mouseStart.x - mouseX;\n        var diffy = self.mouseStart.y - mouseY;\n        self.selectBox.scale.set(diffx, diffy, 1);\n      } else {\n        self.selectBox.visible = false;\n      }\n    }\n  };\n\n  /**\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\n   */\n  self.onHover = function (node) {\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\n      self.highlightNode(self.lastHover, false);\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\n      self.highlightEdges(node, false);\n    }\n    self.lastHover = node;\n    if (node) {\n      self.highlightNode(node, true);\n      node.renderData.textHolder.children[0].element.hideme = false;\n      self.highlightEdges(node, true);\n      //set currently hovered node\n      appState.graph.currentlyHovered = node;\n    } else if (self.selection.length == 0) {\n      appState.graph.currentlyHovered = undefined;\n      self.graph.forEachNode(n => {\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      });\n    }\n    if (self.prevHighlights != undefined) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\n      }\n    }\n  };\n\n\n\n\n\n  // vars to get time at mouse press and time at mouse release\n  var startTime = 0;\n  var endTime = 0;\n  /**\n   * Mouse down event to start a selection box or start dragging a node\n   */\n  self.onMouseDown = function (selection, mouseX, mouseY, button, ctrl) {\n    // if mouse is in minimap, do nothing else\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n      self.mouseDown = true;\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\n      return;\n    }\n\n    \n\n    self.leftMouseDown = true;\n    if (self.leftMouseDown) {\n      self.mouseDown = true;\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n      if (button == 0 && !self.dragging) {\n        self.showBox = true;\n      }\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\n        for (var i = 0; i < self.selection.length; i++) {\n          self.selection[i].renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            self.selection[\n              i\n            ].renderData.draw_object.children[0].visible = false;\n          } else {\n            self.selection[i].renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          self.selection[\n            i\n          ].renderData.textHolder.children[0].element.hideme = true;\n        }\n        self.selection = [];\n      }\n\n\n\n\n\n      //captures click times to measure time distance between clicks\n      oldStartTime = startTime;\n      startTime = Date.now();\n\n      //keeps track of time difference\n      clickDifference = startTime - oldStartTime;\n\n      //sets whether or not last click was \n      //double click or not\n      if (clickDifference < 225) {\n        self.doubleClicked = true;\n      } else {\n        self.doubleClicked = false;\n      }\n\n      \n\n      //selects single node when dragged\n      if (selection) {\n        self.dragging = selection;\n        if (self.selection.indexOf(selection) == -1) {\n          self.selection.push(selection);\n          selection.renderData.isSelected = false;\n        }\n      }\n\n      if (selection) {\n        self.dragging = selection;\n        //only pins node if double-clicked\n        if (self.doubleClicked) {\n          //passing in 'selection' node to pass information for node to pin\n          self.updateSelection(self.dragging.x, self.dragging.y, selection);\n        } else if (ctrl) {\n          self.selection.splice(self.selection.indexOf(selection), 1);\n          selection.renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            selection.renderData.draw_object.children[0].visible = false;\n          } else {\n            selection.renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          selection.renderData.textHolder.children[0].element.hideme = true;\n          self.dragging = null;\n        }\n      } else {\n        if (self.newNodeIds) {\n          self.highlightNodeIds([], true);\n          self.newNodeIds = undefined;\n        }\n      }\n    }\n  };\n\n  /**\n   * Mouse up event that closes selection flags and emits selection to Argo\n   */\n  self.onMouseUp = function (selection, mouseX, mouseY, button) {\n    endTime = Date.now();\n    self.mouseDown = false;\n\n\n\n    // Left or right mouse button\n    if (true) {\n      self.showBox = false;\n      self.dragging = null;\n      self.selectBox.visible = false;\n\n      self.ee.emit(\"select-nodes\", self.selection);\n    }\n\n  };\n\n\n\n  /**\n   * Right click event to save right clicked node\n   */\n  self.onRightClick = function (selection) {\n    if (selection) {\n      self.rightClickedNode = selection;\n    } else {\n      self.rightClickedNode = null;\n    }\n  };\n\n  /**\n   * Right click event that emits context menu event to Argo\n   */\n  self.onRightClickCoords = function (event) {\n    // Don't show menu if dragging camera\n    if (endTime - startTime < 200) {\n      self.ee.emit(\"right-click\", {\n        pageX: event.pageX,\n        pageY: event.pageY\n      });\n    }\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Set all nodes to a size\n   */\n  self.setUniformNodeSize = function(s) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.scale.set(s, s, 1);\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n    });\n  };\n\n  /**\n   * Set all nodes to a size based on a value in the node's data\n   */\n  self.setNodeDataSize = function(dataValue) {\n    self.graph.forEachNode(function(node) {\n      dataVal = node.renderData[dataValue];\n      if (!dataVal) {\n        console.log(\"Data value does not exist\");\n      } else {\n        dataVal = Math.log(dataVal + 1);\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color\n   */\n  self.setUniformNodeColor = function(hsvDegree) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color based on a value in the node's data\n   */\n  self.setNodeDataColor = function(dataValue) {\n    var i = 0;\n    values = [];\n    min = null;\n    max = null;\n\n    self.graph.forEachNode(function(node) {\n      if ((dataVal = node.renderData[dataValue])) {\n        if (min == null) min = dataVal;\n        if (max == null) max = dataVal;\n        if (dataVal < min) min = dataVal;\n        else if (dataVal > max) max = dataVal;\n        values[i] = dataVal;\n        i += 1;\n      } else {\n        values[i] = -1;\n      }\n    });\n\n    i = 0;\n    self.graph.forEachNode(function(node) {\n      var hsvDegree;\n      if (values[i] == -1) {\n        hsvDegree = 0;\n      } else {\n        values[i] = (values[i] - min) / (max - min);\n        hsvDegree = values[i] * 120;\n      }\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n      i++;\n    });\n  };\n\n  /**\n   * Map a node attribute based on some mapping function\n   */\n  self.mapNodeAttributes = function(mapping, nodes = null) {\n    let val;\n    if (mapping[0] == \"degree\") {\n      val = node => (node.links ? node.links.length + 2 : 2);\n    } else if (mapping[0] == \"scalex\") {\n      val = node => node.renderData.draw_object.scale.x;\n    } else {\n      val = node => mapping[0];\n    }\n\n    let mod;\n    if (mapping[1] == \"volume\") {\n      mod = val => self.volToRadius(val);\n    } else if (mapping[1] == \"mult\") {\n      mod = val => val * mapping[3](val);\n    } else if (mapping[1] == \"add\") {\n      mod = val => val + mapping[3](val);\n    } else if (mapping[1] == \"log\") {\n      mod = val => Math.log(val);\n    } else {\n      mod = val => val;\n    }\n\n    let attr;\n    if (mapping[2] == \"scalexy\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.scale.set(val, val, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      };\n    } else if (mapping[2] == \"edgeColorRed\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.r = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.b = 1;\n        node.renderData.linecolor.r = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorGreen\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.g = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.r = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"nodeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.material.color.b = 1;\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"pinned\") {\n      attr = (node, val) => {\n        node.pinnedx = val;\n        node.pinnedy = val;\n      };\n    } else if (mapping[2] == \"labelSize\") {\n      attr = (node, val) => {\n        self.changeLabelFontSize(node, val);\n      };\n    } else if (mapping[2] == \"labelLength\") {\n      attr = (node, val) => {\n        self.changeLabelLength(node, val);\n      };\n    }\n\n    self.changeNodes(val, mod, attr, nodes);\n  };\n\n  /**\n   *  get attribute from node using function val\n   *  modify result with function mode\n   *  set node attribute with attr\n   */\n  self.changeNode = function(val, mod, attr, node) {\n    var v = val(node);\n    if (v != undefined) {\n      var r = mod(v);\n      if (r != undefined) {\n        attr(node, r);\n      }\n    }\n  };\n\n  /**\n   *  perform changeNode on many nodes\n   */\n  self.changeNodes = function(val, mod, attr, nodes = null) {\n    if (nodes == null) {\n      self.graph.forEachNode(function(node) {\n        self.changeNode(val, mod, attr, node);\n      });\n    } else {\n      for (var i = 0; i < nodes.length; i++) {\n        self.changeNode(val, mod, attr, nodes[i]);\n      }\n    }\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelLength = function(node, numChars) {\n    node.renderData.textHolder.children[0].element.children[0].style.width =\n      numChars.toString() + \"ch\";\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\n    size = size * relativeSize;\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\n      size.toString() + \"rem\";\n  };\n\n  /**\n   * Change boundary size\n   */\n  self.setBoundarySize = function(size) {\n    self.renderWidth = size;\n    self.renderHeight = size;\n    self.boundaries.scale.set(size * 2, size * 2, 1);\n    self.boundaries.position.x = -size;\n    self.boundaries.position.y = -size;\n    self.controls.maxDistance = size * 2;\n    self.minimap.camera.position.z = self.renderWidth * 2;\n  };\n\n  /**\n   * Change viewport size\n   */\n  self.setViewPortSize = function(camera) {\n    var distance = self.ccamera.position.z;\n    var height =\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\n    var width = height * camera.aspect + 5;\n    self.viewPort.scale.set(width, height, 1);\n    self.viewPort.position.x = camera.position.x - width / 2;\n    self.viewPort.position.y = camera.position.y - height / 2;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n\nmodule.exports = function(self) {\n  /**\n   *  Create highlight mesh\n   */\n  self.createHighlightMesh = function(node, texture) {\n    var shape =\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\n    if (shape == \"square\") {\n      var hgeometry = self.make2x2Rect();\n    } else {\n      var hgeometry = new THREE.CircleGeometry(1, 32);\n    }\n\n    return self.createHighlightDrawObject(hgeometry, node, texture);\n  };\n\n  /**\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\n   */\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\n    var size = self.getNodeSize(node);\n    var hsize = def.HIGHLIGHT_SIZE;\n\n    texture = def.NODE_NO_HTEX ? null : texture;\n    var color = def.NODE_NO_HCOLOR\n      ? null\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    hmaterial.transparent = true;\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\n    highlight.visible = true;\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\n    highlight.position.z = -0.01;\n    return highlight;\n  };\n\n  /**\n   *  Create node mesh\n   */\n  self.createNodeMesh = function(node, texture) {\n    var shape = node.renderData.shape || def.NODE_SHAPE;\n    if (shape == \"square\") {\n      var geometry = self.make2x2Rect();\n    } else {\n      var geometry = new THREE.CircleGeometry(1, 32);\n    }\n    return self.createNodeDrawObject(geometry, node, texture);\n  };\n\n  /**\n   * Create mesh to visual show pinning\n   */\n  self.createPinMesh = function(size) {\n    var geometry = self.make2x2Rect();\n    var color = new THREE.Color(def.PIN_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color });\n    var pinMesh = new THREE.Mesh(geometry, material);\n    pinMesh.scale.set(0.1, 0.1, 1);\n    pinMesh.position.z = 0.01;\n    pinMesh.visible = false;\n    return pinMesh;\n  };\n\n  /**\n   * Create the drawing information for a node\n   */\n  self.createNodeDrawObject = function(geometry, node, texture) {\n    var size = self.getNodeSize(node);\n\n    texture = def.NODE_NO_TEX ? null : texture;\n    var color = def.NODE_NO_COLOR\n      ? null\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    material.transparent = true;\n    var draw_object = new THREE.Mesh(geometry, material);\n    draw_object.scale.set(size, size, 1);\n    return draw_object;\n  };\n\n  /**\n   * Get the size of a node if it exists, otherwise get it from the render data.\n   */\n  self.getNodeSize = function(node) {\n    var size;\n    if (node.renderData.size != undefined) size = node.renderData.size;\n    else size = node.renderData[\"size\"];\n    return size;\n  };\n\n  self.createNodeLabel = function(node) {\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      wireframeLinewidth: 1,\n      side: THREE.DoubleSide\n    });\n    var geometry = new THREE.PlaneGeometry(1000, 200);\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\n    var label = self.createAndSetupLabelDiv(node, textMesh);\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\n    node.renderData.textHolder = textHolder;\n    self.scene.add(textHolder);\n  };\n\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\n    var textMesh = new THREE.Mesh(geometry, material);\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\n    var bbox = new THREE.Box3().setFromObject(textMesh);\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\n    textMesh.visible = def.TEXT_WIREFRAME;\n    return textMesh;\n  };\n\n  self.createAndSetupLabelDiv = function(node, textMesh) {\n    var label = self.createLabelDiv(node);\n    label.element.hidden = true;\n    label.position.copy(textMesh.position);\n    label.scale.copy(textMesh.scale);\n    return label;\n  };\n\n  self.createAndSetupTextHolder = function(label, textMesh) {\n    var textHolder = new THREE.Object3D();\n    textHolder.add(label);\n    textHolder.add(textMesh);\n    return textHolder;\n  };\n\n  /**\n   *  Create label div\n   */\n  self.createLabelDiv = function(node) {\n    // Create canvas to draw text label onto sprite image\n    var element = self.createLabelDivElement();\n    var content = document.createTextNode(node.renderData.label);\n    var textElement = self.createLabelTextElement();\n    textElement.appendChild(content);\n    element.appendChild(textElement);\n    var labelObj = new THREE.CSS3DObject(element);\n    return labelObj;\n  };\n\n  /**\n   * Creates the Label Div Element for a node's label\n   */\n  self.createLabelDivElement = function() {\n    var element = document.createElement(\"div\");\n    element.style.width = \"1000px\";\n    element.style.height = \"200px\";\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\n    element.style.opacity = def.TEXT_OPACITY;\n    return element;\n  };\n\n  /**\n   * Creates the text element to add to the label div for a node.\n   */\n  self.createLabelTextElement = function() {\n    var textElement = document.createElement(\"div\");\n    textElement.style.width = \"1000px\";\n    textElement.style.height = \"2ch\";\n    textElement.style.fontSize = \"96px\";\n    textElement.style.textOverflow = \"ellipsis\";\n    textElement.style.overflow = \"hidden\";\n    textElement.style.userSelect = \"all\";\n    textElement.style.whiteSpace = \"nowrap\";\n    //textElement.setAttribute('contenteditable', 'true');\n    return textElement;\n  };\n\n  /**\n   * Instantiates, sets highlight for, and sets position for the actual THREE\n   * drawing of a node\n   */\n  self.setupNodeDrawObject = function(node, htexture, texture) {\n    var draw_object = self.createNodeMesh(node, texture);\n\n    // Create highlight\n    if (!def.NODE_NO_HIGHLIGHT) {\n      var highlight = self.createHighlightMesh(node, htexture);\n      draw_object.add(highlight);\n    }\n\n    var pinMesh = self.createPinMesh();\n    draw_object.add(pinMesh);\n\n    draw_object.position.x = node.renderData.x;\n    draw_object.position.y = node.renderData.y;\n    draw_object.index = node.id;\n    draw_object.name = node.id;\n    node.renderData.draw_object = draw_object;\n\n    return draw_object;\n  };\n\n  /**\n   *  Create a node object and add it to the scene.\n   */\n  self.drawNode = function(node) {\n    function onHTextureLoad(node, htexture) {\n      // Load node texture\n      self.textureLoader.load(\n        node.renderData.image || def.NODE_TEXTURE,\n        onTextureLoad.bind(null, node, htexture)\n      );\n    }\n\n    function onTextureLoad(node, htexture, texture) {\n      // Create mesh for node\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\n\n      // Create div for label\n      self.createNodeLabel(node);\n\n      self.nodeCount += 1;\n      self.nodes.add(draw_object);\n    }\n\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\n      onTextureLoad(node, null, null);\n    } else {\n      // Load highlight texture\n      self.textureLoader.load(\n        node.renderData.himage || def.NODE_HTEXTURE,\n        onHTextureLoad.bind(null, node)\n      );\n    }\n  };\n\n  /**\n   *  Create an edge and add it to the lineSegments.\n   */\n  self.drawEdge = function(source, target, visible = true) {\n    if (\n      source.renderData.draw_object === undefined ||\n      target.renderData.draw_object === undefined\n    ) {\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\n      return;\n    }\n    var index = self.drawCount * 3;\n    self.lineObjects[index / 3] = source;\n    self.lineObjects[index / 3 + 1] = target;\n    if (!source.linkObjs) {\n      source.linkObjs = [];\n    }\n    if (!target.linkObjs) {\n      target.linkObjs = [];\n    }\n\n    self.lineIndices.push({\n      source: source,\n      target: target,\n      hide: !visible,\n      linecolor: source.renderData.linecolor, \n    });\n\n    source.linkObjs.push(self.lineIndices[index / 6]);\n    target.linkObjs.push(self.lineIndices[index / 6]);\n    self.updateColorsAndPositions(source, target, index);\n    self.drawCount += 2;\n  };\n\n  /**\n   * Update the colors and positions of the edges between source and target\n   */\n  self.updateColorsAndPositions = function(source, target, index) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n    var v1pos = source.renderData.draw_object.position;\n    var v2pos = target.renderData.draw_object.position;\n    var v1color = self.lineIndices[index / 6].linecolor;\n    var v2color = self.lineIndices[index / 6].linecolor;\n    colors[index] = v1color.b;\n    positions[index++] = v1pos.x;\n    colors[index] = v1color.g;\n    positions[index++] = v1pos.y;\n    colors[index] = v1color.r;\n    positions[index++] = v1pos.z - 0.02;\n    colors[index] = v2color.b;\n    positions[index++] = v2pos.x;\n    colors[index] = v2color.g;\n    positions[index++] = v2pos.y;\n    colors[index] = v2color.r;\n    positions[index++] = v2pos.z - 0.02;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n/**\n * These functions are endpoints revealed to Argo frontend\n */\nmodule.exports = function(self) {\n  /**\n   * Set frame.mouseMode to the specified mode\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\n   */\n  self.setMouseMode = mode => {\n    if (mode === \"select\") {\n      // This is the default mode, where users can select one or multiple nodes\n      self.mouseMode = \"select\";\n      self.isMouseModeMove = false;\n    } else if (mode === \"move\") {\n      // move mode, where user can drag the screen to achieve panning\n      self.mouseMode = \"move\";\n      self.isMouseModeMove = true;\n    }\n  };\n\n  self.pauseLayout = () => {\n    self.paused = true;\n  };\n  window.pause = self.pauseLayout;\n\n  self.resumeLayout = () => {\n    self.paused = false;\n  };\n\n  self.mapSelectedNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\n  };\n\n  self.mapAllNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\n  };\n\n  self.pinSelectedNodes = () => {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\n  };\n\n  self.unpinSelectedNodes = () => {\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\n  };\n\n  self.setLabelFontSize = size => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\n    });\n  };\n\n  self.setLabelRelativeSize = size => {\n    self.relativeFontSize = size;\n    self.setLabelFontSize(self.labelSize);\n  };\n\n  self.setLabelLength = numChars => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelLength(node, numChars);\n    });\n  };\n\n  self.toggleMiniMap = () => {\n    if (self.mapShowing) {\n      self.hideMiniMap();\n    } else {\n      self.showMiniMap();\n    }\n  };\n\n  self.showMiniMap = () => {\n    if (self.mapShowing) {\n      return;\n    }\n    self.mapShowing = true;\n    self.element.appendChild(self.minimapRenderer.domElement);\n  };\n\n  self.hideMiniMap = () => {\n    if (!self.mapShowing) {\n      return;\n    }\n    self.mapShowing = false;\n    self.element.removeChild(self.minimapRenderer.domElement);\n  };\n\n  // The CSS Renderer for rendering labels is the most expensive\n  // renderer. For 300+ nodes it's recommended to turn it off by\n  // default and only use it when no node is moving to prevent\n  // visible lagging (during layout, dragging etc.)\n  self.turnOffLabelCSSRenderer = () => {\n    if (self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.removeChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = true;\n  };\n\n  // See turnOffLabelCSSRenderer.\n  self.turnOnLabelCSSRenderer = () => {\n    if (!self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = false;\n  };\n\n  // Emits id of every node with label being displayed at this moment.\n  // Used to keep mobx state in sync since GraphStore and snapshot\n  // needs to save what nodes have labels shown and what not.\n  // Also turns off label CSSRenderer when no node is showing label.\n  self.updateNodesShowingLabels = () => {\n    var nodes = [];\n    self.graph.forEachNode(n => {\n      var node = self.graph.getNode(n.id);\n      if (node.renderData.textHolder.children[0].element.override) {\n        nodes.push(n.id);\n      }\n    });\n\n    // Turns off label CSSRenderer when no node is showing label.\n    // This is because CSSRenderer is slow.\n    if (nodes.length == 0) {\n      self.turnOffLabelCSSRenderer();\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \n      //Only turns on when no node is moving\n      self.turnOnLabelCSSRenderer();\n    }\n\n    self.ee.emit(\"show-node-label\", nodes);\n  };\n\n  self.toggleSelectedLabels = () => {\n    self.toggleLabels(self.selection.map(n => n.id));\n  };\n\n  self.showSelectedLabels = () => {\n    document.getElementById(\"showSelected\").style.display=\"none\";\n    document.getElementById(\"hideSelected\").style.display=\"inline\";\n    self.showLabels(self.selection.map(n => n.id));\n  };\n\n  self.hideSelectedLabels = () => {\n    document.getElementById(\"hideSelected\").style.display=\"none\";\n    document.getElementById(\"showSelected\").style.display=\"inline\";\n    self.hideLabels(self.selection.map(n => n.id));\n  };\n\n  self.toggleLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        if (\n          node.renderData.textHolder.children[0].element.override == undefined\n        ) {\n          node.renderData.textHolder.children[0].element.override = false;\n        }\n        node.renderData.textHolder.children[0].element.override = !node\n          .renderData.textHolder.children[0].element.override;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = true;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = false;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideAllLabels = () => {\n    document.getElementById(\"hideAll\").style.display=\"none\";\n    document.getElementById(\"showAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = false;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showAllLabels = () => {\n    document.getElementById(\"showAll\").style.display=\"none\";\n    document.getElementById(\"hideAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = true;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.setCanvasSize = function(size) {\n    self.setBoundarySize(size);\n  };\n\n  self.setAllNodesShape = function(shape) {\n    if (self.selection.length == 0) {\n      self.graph.forEachNode(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    } else {\n      self.selection.forEach(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    }\n  };\n\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\n    self.graph.forEachNode(function(node) {\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\n      } else {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      }\n    });\n  }\n\n  self.setNodeShape = function(node, shape) {\n    if (shape == \"square\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = self.make2x2Rect();\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\n    } else if (shape == \"circle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        32\n      );\n    } else if (shape == \"triangle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        3\n      );\n    } else if (shape == \"pentagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        5\n      );\n    } else if (shape == \"hexagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        6\n      );\n    } else if (shape == \"octagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        8\n      );\n    }\n  };\n\n  self.getNumSelected = function() {\n    if (self.selection.length == self.graph.getNodesCount()) {\n      return 0;\n    }\n    return self.selection.length;\n  };\n\n  self.toggleDark = function() {\n    self.darkMode = !self.darkMode;\n    self.updateViewPortEdgeColor();\n  };\n\n  self.updateViewPortEdgeColor = function() {\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \n  }\n\n  self.getGraph = function() {\n    return self.graph;\n  };\n\n  self.getNodeList = function() {\n    var nodes = [];\n    self.graph.forEachNode(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  };\n\n  self.getPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.x, node.y];\n    });\n    return poses;\n  };\n\n  self.getPinPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.fx, node.fy];\n    });\n    return poses;\n  };\n\n  var alias = false;\n  self.toggleAlias = () => {\n    // TODO: recreate renderer with new antialias\n    // self.init(alias);\n    // self.display();\n    alias = !alias;\n  };\n\n  self.setLastNode = id => {\n    self.lastNode = self.graph.getNode(id);\n  };\n\n  self.dragLastNode = () => {\n    self.selectNode(self.lastNode);\n  };\n\n  var x = 1.0;\n  self.lowerRes = () => {\n    x -= 0.1;\n    self.renderer.setPixelRatio(x);\n    self.onWindowResize();\n  };\n\n  self.toggleNeighborHighlight = function() {\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\n  };\n\n  self.highlightNodeIds = function(nodeids, toggle) {\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\n      nodeids = nodeids[0];\n    }\n    if (self.prevHighlights) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.highlightNode(\n          self.prevHighlights[i],\n          !toggle,\n          def.SEARCH_HIGHLIGHT\n        );\n      }\n    }\n    self.prevHighlights = [];\n    self.graph.forEachNode(function(node) {\n      if (nodeids.indexOf(node.id) != -1) {\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\n        self.prevHighlights.push(node);\n      }\n    });\n  };\n\n  self.removeSelected = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.removeNode(self.selection[i]);\n    }\n    self.selection = [];\n  };\n\n  self.removeNodesByIds = function(nodeids) {\n    for (var i = 0; i < nodeids.length; i++) {\n      const node = self.graph.getNode(nodeids[i]);\n      if (node) {\n        self.removeNode(node);\n      }\n    }\n    self.selection = [];\n  };\n\n  self.getSelected = function() {\n    return self.selection;\n  };\n\n  self.getSelectedIds = function() {\n    return self.selection.map(n => n.id);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateEdges = function() {\n    self.edges.setDrawRange(0, self.drawCount + 6);\n    var total = self.drawCount + 6;\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n\n    //directed arrows\n    // self.directedArrows.attributes.position = new THREE.BufferAttribute(\n    //   new Float32Array(self.MAX_LINES * 3),\n    //   3\n    // );\n    self.directedArrows.attributes.position.array = new Float32Array(self.MAX_LINES * 3);\n    var arrowPosition = self.directedArrows.attributes.position.array;\n    var arrowColor = self.directedArrows.attributes.color.array;\n    \n\n    for (var i = 0; i < total; i += 2) {\n      if (self.lineIndices[i / 2]) {\n        if (self.lineIndices[i / 2].hide) {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = 255;\n          colors[i * 3 + 1] = 255;\n          colors[i * 3 + 2] = 255;\n          colors[i * 3 + 3] = 255;\n          colors[i * 3 + 4] = 255;\n          colors[i * 3 + 5] = 255;\n        } else {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          var v1color = self.lineIndices[i / 2].linecolor;\n          var v2color = self.lineIndices[i / 2].linecolor;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = v1color.r;\n          colors[i * 3 + 1] = v1color.g;\n          colors[i * 3 + 2] = v1color.b;\n          colors[i * 3 + 3] = v2color.r;\n          colors[i * 3 + 4] = v2color.g;\n          colors[i * 3 + 5] = v2color.b;\n\n          if (appState.graph.directedOrNot) {\n            self.arrow.visible = true;\n            var midPointX = (v1pos.x + v2pos.x)/2;\n            var midPointY = (v1pos.y + v2pos.y)/2;\n\n            var dX = v2pos.x - v1pos.x;\n            var dY = v2pos.y - v1pos.y;\n\n            if (dX === 0) {\n              dX = 0.001;\n            }\n            var radianDegree = Math.atan(dY / dX);\n            // var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n            // var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n\n            // var degreeDifference = Math.PI/2 - radianDegree\n            arrowPosition[i / 2 * 9] = midPointX;\n            arrowPosition[i / 2 * 9 + 1] = midPointY;\n\n            if (dX >= 0) {\n              var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n            \n            } else {\n              var tempXCorner = midPointX + Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY + Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n            }\n          } else {\n            self.arrow.visible = false;\n          } \n        }\n      }\n    }\n    self.edges.attributes.position.needsUpdate = true;\n    self.edges.attributes.color.needsUpdate = true;\n\n    self.directedArrows.attributes.position.needsUpdate = true;\n    self.directedArrows.attributes.color.needsUpdate = true;\n  };\n\n  /**\n   *  Update the position of the labels\n   */\n  self.updateLabels = function() {\n    var nodes = self.force.nodes();\n    for (var i = 0; i < nodes.length; i++) {\n      let thisNode = self.graph.getNode(nodes[i].id);\n      if (thisNode.renderData.textHolder != undefined) {\n        if (\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\n          !thisNode.renderData.textHolder.children[0].element.override\n        ) {\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\n        } else {\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\n        }\n      }\n      thisNode.renderData.textHolder.position.x =\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\n      thisNode.renderData.textHolder.position.y =\n        thisNode.renderData.draw_object.position.y;\n    }\n  };\n\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateNodes = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.graph.forEachNode(function(node) {\n        if (node.renderData) {\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\n            node.id\n          ).x;\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\n            node.id\n          ).y;\n        }\n      });\n      if (!self.paused) {\n        self.force.step();\n      }\n    } else if (self.options.layout == \"d3\") {\n      var nodes = self.force.nodes();\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].x = Math.max(\n          -self.renderWidth,\n          Math.min(self.renderWidth, nodes[i].x)\n        );\n        nodes[i].y = Math.max(\n          -self.renderHeight,\n          Math.min(self.renderHeight, nodes[i].y)\n        );\n        let thisNode = self.graph.getNode(nodes[i].id);\n        if (thisNode && thisNode.renderData.draw_object) {\n          if (!thisNode.pinnedx) {\n            thisNode.fx = null;\n            thisNode.renderData.draw_object.children[1].visible = false;\n          } else {\n            thisNode.fx = thisNode.x;\n            thisNode.renderData.draw_object.children[1].visible = true;\n          }\n          if (!thisNode.pinnedy) {\n            thisNode.fy = null;\n          } else {\n            thisNode.fy = thisNode.y;\n          }\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\n        }\n      }\n\n      if (!self.paused) {\n        self.force.tick();\n      }\n    }\n  };\n\n  /**\n   * Restrict camera translation\n   */\n  self.updateCamera = function() {\n    self.controls.target.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.object.position.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.target.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.controls.object.position.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\n   */\n  self.updateGraph = function(graph) {\n    var numNodesAdded = 0;\n    graph.forEachNode(function(node) {\n      var oldNode = self.graph.getNode(node.id);\n      if (!oldNode) {\n        if (!self.newNodeIds) {\n          self.newNodeIds = [];\n        }\n        self.newNodeIds.push(node.id);\n        self.addNode(node);\n        numNodesAdded += 1;\n        self.lastNode = self.graph.getNode(node.id);\n      } else {\n        self.updateNode(oldNode, node);\n      }\n    });\n    graph.forEachLink(function(link) {\n      if (!self.graph.getLink(link.fromId, link.toId)) {\n        self.addEdge(\n          self.graph.getNode(link.fromId),\n          self.graph.getNode(link.toId)\n        );\n      }\n    });\n\n    self.graph.forEachNode(function(node) {\n      var oldNode = graph.getNode(node.id);\n      if (!oldNode) {\n        self.removeNode(node);\n      }\n    });\n\n    self.force.alpha(1);\n    self.force.stop();\n\n    if (numNodesAdded > 10) {\n      // This seems unnecessary for now\n      // self.tickToStatic = true;\n      self.tickToStatic = false;\n    } else {\n      self.tickToStatic = false;\n    }\n\n    if (self.newNodeIds) {\n      // Highlight every new node.\n      self.highlightNodeIds(self.newNodeIds, true);\n\n      // Select every new node if there aren't too many of them.\n      if (self.newNodeIds.length < 10) {\n        for (let i = 0; i < self.newNodeIds.length; i++) {\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\n        }\n        self.ee.emit(\"select-nodes\", self.selection);\n      }\n    }\n  };\n\n  /**\n   * update positions in the ngraph given a list of positions\n   */\n  self.updatePositions = function(positions) {\n    self.graph.forEachNode(function(node) {\n      var pos = positions[node.id];\n      if (pos) {\n        node.x = pos[0];\n        node.y = pos[1];\n        if (node.pinnedx) {\n          node.fx = pos[0];\n        }\n        if (node.pinnedy) {\n          node.fy = pos[1];\n        }\n      }\n    });\n  };\n\n  /**\n   * Update a node given a new node\n   */\n  self.updateNode = function(node, newNode) {\n    if (newNode.data) {\n      if (node.data.color && newNode.data.color) {\n        node.data.color = newNode.data.color;\n        node.renderData.color = node.data.color;\n        node.renderData.draw_object.material.color.set(\n          new THREE.Color(node.data.color)\n        );\n      }\n      if (newNode.data.size && newNode.data.size > 0) {\n        node.data.size = newNode.data.size;\n        node.renderData.size = newNode.data.size;\n        node.renderData.draw_object.scale.set(\n          newNode.data.size,\n          newNode.data.size,\n          1\n        );\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n      if (newNode.data.label) {\n        node.data.label = newNode.data.label;\n        node.renderData.label = node.data.label;\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\n          node.data.label;\n      }\n      if (newNode.data.shape) {\n        node.data.shape = newNode.data.shape;\n        node.renderData.shape = node.data.shape;\n        self.setNodeShape(node, node.data.shape);\n      }\n    }\n  };\n};\n"],"sourceRoot":""}